/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/[slug]/page";
exports.ids = ["app/api/[slug]/page"];
exports.modules = {

/***/ "./request-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/request-async-storage.external");

/***/ }),

/***/ "./static-generation-async-storage.external":
/*!***************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external" ***!
  \***************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/static-generation-async-storage.external");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "../../client/components/action-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist\\client\\components\\action-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist\\client\\components\\action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist\\client\\components\\request-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist\\client\\components\\request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!*********************************************************************************************!*\
  !*** external "next/dist\\client\\components\\static-generation-async-storage.external.js" ***!
  \*********************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist\\client\\components\\static-generation-async-storage.external.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2F%5Bslug%5D%2Fpage&page=%2Fapi%2F%5Bslug%5D%2Fpage&appPaths=%2Fapi%2F%5Bslug%5D%2Fpage&pagePath=private-next-app-dir%2Fapi%2F%5Bslug%5D%2Fpage.tsx&appDir=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=export&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2F%5Bslug%5D%2Fpage&page=%2Fapi%2F%5Bslug%5D%2Fpage&appPaths=%2Fapi%2F%5Bslug%5D%2Fpage&pagePath=private-next-app-dir%2Fapi%2F%5Bslug%5D%2Fpage.tsx&appDir=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=export&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalError: () => (/* reexport default from dynamic */ next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2___default.a),\n/* harmony export */   __next_app__: () => (/* binding */ __next_app__),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   pages: () => (/* binding */ pages),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   tree: () => (/* binding */ tree)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-page/module.compiled */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/module.compiled.js?5bc9\");\n/* harmony import */ var next_dist_server_future_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/client/components/error-boundary */ \"(rsc)/./node_modules/next/dist/client/components/error-boundary.js\");\n/* harmony import */ var next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/app-render/entry-base */ \"(rsc)/./node_modules/next/dist/server/app-render/entry-base.js\");\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__) if([\"default\",\"tree\",\"pages\",\"GlobalError\",\"originalPathname\",\"__next_app__\",\"routeModule\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\nconst tree = {\n        children: [\n        '',\n        {\n        children: [\n        'api',\n        {\n        children: [\n        '[slug]',\n        {\n        children: ['__PAGE__', {}, {\n          page: [() => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/api/[slug]/page.tsx */ \"(rsc)/./app/api/[slug]/page.tsx\")), \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\page.tsx\"],\n          \n        }]\n      },\n        {\n        \n        \n      }\n      ]\n      },\n        {\n        \n        \n      }\n      ]\n      },\n        {\n        'layout': [() => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/layout.tsx */ \"(rsc)/./app/layout.tsx\")), \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\layout.tsx\"],\n'not-found': [() => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/not-found-error */ \"(rsc)/./node_modules/next/dist/client/components/not-found-error.js\", 23)), \"next/dist/client/components/not-found-error\"],\n        \n      }\n      ]\n      }.children;\nconst pages = [\"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\page.tsx\"];\n\n\nconst __next_app_require__ = __webpack_require__\nconst __next_app_load_chunk__ = () => Promise.resolve()\nconst originalPathname = \"/api/[slug]/page\";\nconst __next_app__ = {\n    require: __next_app_require__,\n    loadChunk: __next_app_load_chunk__\n};\n\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppPageRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n        page: \"/api/[slug]/page\",\n        pathname: \"/api/[slug]\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\",\n        appPaths: []\n    },\n    userland: {\n        loaderTree: tree\n    }\n});\n\n//# sourceMappingURL=app-page.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkYlNUJzbHVnJTVEJTJGcGFnZSZwYWdlPSUyRmFwaSUyRiU1QnNsdWclNUQlMkZwYWdlJmFwcFBhdGhzPSUyRmFwaSUyRiU1QnNsdWclNUQlMkZwYWdlJnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGJTVCc2x1ZyU1RCUyRnBhZ2UudHN4JmFwcERpcj1DJTNBJTVDdnMlMjBjb2RlJTIwcHJvamVjdHMlNUNib2lsZXJwbGF0ZSUyMGNvZGUlMjB3ZWJhcHAlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUN2cyUyMGNvZGUlMjBwcm9qZWN0cyU1Q2JvaWxlcnBsYXRlJTIwY29kZSUyMHdlYmFwcCZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD1leHBvcnQmcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFvRztBQUNyQztBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakMsdUJBQXVCLDhKQUE4RztBQUNySTtBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EseUJBQXlCLDRJQUFtRztBQUM1SCxvQkFBb0IsME5BQWdGO0FBQ3BHO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUN1QjtBQUM2RDtBQUNwRiw2QkFBNkIsbUJBQW1CO0FBQ2hEO0FBQ087QUFDQTtBQUNQO0FBQ0E7QUFDQTtBQUN1RDtBQUN2RDtBQUNPLHdCQUF3Qiw4R0FBa0I7QUFDakQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY29kZWJvaWxlci8/MDlkYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBQYWdlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcGFnZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG4vLyBXZSBpbmplY3QgdGhlIHRyZWUgYW5kIHBhZ2VzIGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCB0cmVlID0ge1xuICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAnJyxcbiAgICAgICAge1xuICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAnYXBpJyxcbiAgICAgICAge1xuICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAnW3NsdWddJyxcbiAgICAgICAge1xuICAgICAgICBjaGlsZHJlbjogWydfX1BBR0VfXycsIHt9LCB7XG4gICAgICAgICAgcGFnZTogWygpID0+IGltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcdnMgY29kZSBwcm9qZWN0c1xcXFxib2lsZXJwbGF0ZSBjb2RlIHdlYmFwcFxcXFxhcHBcXFxcYXBpXFxcXFtzbHVnXVxcXFxwYWdlLnRzeFwiKSwgXCJDOlxcXFx2cyBjb2RlIHByb2plY3RzXFxcXGJvaWxlcnBsYXRlIGNvZGUgd2ViYXBwXFxcXGFwcFxcXFxhcGlcXFxcW3NsdWddXFxcXHBhZ2UudHN4XCJdLFxuICAgICAgICAgIFxuICAgICAgICB9XVxuICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICBcbiAgICAgICAgXG4gICAgICB9XG4gICAgICBdXG4gICAgICB9LFxuICAgICAgICB7XG4gICAgICAgIFxuICAgICAgICBcbiAgICAgIH1cbiAgICAgIF1cbiAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgJ2xheW91dCc6IFsoKSA9PiBpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkM6XFxcXHZzIGNvZGUgcHJvamVjdHNcXFxcYm9pbGVycGxhdGUgY29kZSB3ZWJhcHBcXFxcYXBwXFxcXGxheW91dC50c3hcIiksIFwiQzpcXFxcdnMgY29kZSBwcm9qZWN0c1xcXFxib2lsZXJwbGF0ZSBjb2RlIHdlYmFwcFxcXFxhcHBcXFxcbGF5b3V0LnRzeFwiXSxcbidub3QtZm91bmQnOiBbKCkgPT4gaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJuZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvbm90LWZvdW5kLWVycm9yXCIpLCBcIm5leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9ub3QtZm91bmQtZXJyb3JcIl0sXG4gICAgICAgIFxuICAgICAgfVxuICAgICAgXVxuICAgICAgfS5jaGlsZHJlbjtcbmNvbnN0IHBhZ2VzID0gW1wiQzpcXFxcdnMgY29kZSBwcm9qZWN0c1xcXFxib2lsZXJwbGF0ZSBjb2RlIHdlYmFwcFxcXFxhcHBcXFxcYXBpXFxcXFtzbHVnXVxcXFxwYWdlLnRzeFwiXTtcbmV4cG9ydCB7IHRyZWUsIHBhZ2VzIH07XG5leHBvcnQgeyBkZWZhdWx0IGFzIEdsb2JhbEVycm9yIH0gZnJvbSBcIm5leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9lcnJvci1ib3VuZGFyeVwiO1xuY29uc3QgX19uZXh0X2FwcF9yZXF1aXJlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fXG5jb25zdCBfX25leHRfYXBwX2xvYWRfY2h1bmtfXyA9ICgpID0+IFByb21pc2UucmVzb2x2ZSgpXG5leHBvcnQgY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9bc2x1Z10vcGFnZVwiO1xuZXhwb3J0IGNvbnN0IF9fbmV4dF9hcHBfXyA9IHtcbiAgICByZXF1aXJlOiBfX25leHRfYXBwX3JlcXVpcmVfXyxcbiAgICBsb2FkQ2h1bms6IF9fbmV4dF9hcHBfbG9hZF9jaHVua19fXG59O1xuZXhwb3J0ICogZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvYXBwLXJlbmRlci9lbnRyeS1iYXNlXCI7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBQYWdlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9QQUdFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvW3NsdWddL3BhZ2VcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9bc2x1Z11cIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIixcbiAgICAgICAgYXBwUGF0aHM6IFtdXG4gICAgfSxcbiAgICB1c2VybGFuZDoge1xuICAgICAgICBsb2FkZXJUcmVlOiB0cmVlXG4gICAgfVxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1wYWdlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2F%5Bslug%5D%2Fpage&page=%2Fapi%2F%5Bslug%5D%2Fpage&appPaths=%2Fapi%2F%5Bslug%5D%2Fpage&pagePath=private-next-app-dir%2Fapi%2F%5Bslug%5D%2Fpage.tsx&appDir=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=export&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp%5Capp%5Capi%5C%5Bslug%5D%5C_components%5Capi-details-client.tsx&modules=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp%5Cnode_modules%5Cnext%5Cdist%5Cshared%5Clib%5Clazy-dynamic%5Cdynamic-no-ssr.js&server=true!":
/*!*****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp%5Capp%5Capi%5C%5Bslug%5D%5C_components%5Capi-details-client.tsx&modules=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp%5Cnode_modules%5Cnext%5Cdist%5Cshared%5Clib%5Clazy-dynamic%5Cdynamic-no-ssr.js&server=true! ***!
  \*****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/api/[slug]/_components/api-details-client.tsx */ \"(ssr)/./app/api/[slug]/_components/api-details-client.tsx\"));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/shared/lib/lazy-dynamic/dynamic-no-ssr.js */ \"(ssr)/./node_modules/next/dist/shared/lib/lazy-dynamic/dynamic-no-ssr.js\", 23))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9QyUzQSU1Q3ZzJTIwY29kZSUyMHByb2plY3RzJTVDYm9pbGVycGxhdGUlMjBjb2RlJTIwd2ViYXBwJTVDYXBwJTVDYXBpJTVDJTVCc2x1ZyU1RCU1Q19jb21wb25lbnRzJTVDYXBpLWRldGFpbHMtY2xpZW50LnRzeCZtb2R1bGVzPUMlM0ElNUN2cyUyMGNvZGUlMjBwcm9qZWN0cyU1Q2JvaWxlcnBsYXRlJTIwY29kZSUyMHdlYmFwcCU1Q25vZGVfbW9kdWxlcyU1Q25leHQlNUNkaXN0JTVDc2hhcmVkJTVDbGliJTVDbGF6eS1keW5hbWljJTVDZHluYW1pYy1uby1zc3IuanMmc2VydmVyPXRydWUhIiwibWFwcGluZ3MiOiJBQUFBLGtOQUF5STtBQUN6SSIsInNvdXJjZXMiOlsid2VicGFjazovL2NvZGVib2lsZXIvP2RiYWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFx2cyBjb2RlIHByb2plY3RzXFxcXGJvaWxlcnBsYXRlIGNvZGUgd2ViYXBwXFxcXGFwcFxcXFxhcGlcXFxcW3NsdWddXFxcXF9jb21wb25lbnRzXFxcXGFwaS1kZXRhaWxzLWNsaWVudC50c3hcIik7XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkM6XFxcXHZzIGNvZGUgcHJvamVjdHNcXFxcYm9pbGVycGxhdGUgY29kZSB3ZWJhcHBcXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxzaGFyZWRcXFxcbGliXFxcXGxhenktZHluYW1pY1xcXFxkeW5hbWljLW5vLXNzci5qc1wiKSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp%5Capp%5Capi%5C%5Bslug%5D%5C_components%5Capi-details-client.tsx&modules=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp%5Cnode_modules%5Cnext%5Cdist%5Cshared%5Clib%5Clazy-dynamic%5Cdynamic-no-ssr.js&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Capp-router.js&modules=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Cerror-boundary.js&modules=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Clayout-router.js&modules=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Cnot-found-boundary.js&modules=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Crender-from-template-context.js&modules=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Cstatic-generation-searchparams-bailout-provider.js&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Capp-router.js&modules=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Cerror-boundary.js&modules=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Clayout-router.js&modules=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Cnot-found-boundary.js&modules=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Crender-from-template-context.js&modules=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Cstatic-generation-searchparams-bailout-provider.js&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/app-router.js */ \"(ssr)/./node_modules/next/dist/client/components/app-router.js\", 23));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/error-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/error-boundary.js\", 23));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/layout-router.js */ \"(ssr)/./node_modules/next/dist/client/components/layout-router.js\", 23));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/not-found-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/not-found-boundary.js\", 23));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/render-from-template-context.js */ \"(ssr)/./node_modules/next/dist/client/components/render-from-template-context.js\", 23));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/static-generation-searchparams-bailout-provider.js */ \"(ssr)/./node_modules/next/dist/client/components/static-generation-searchparams-bailout-provider.js\", 23))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9QyUzQSU1Q3ZzJTIwY29kZSUyMHByb2plY3RzJTVDYm9pbGVycGxhdGUlMjBjb2RlJTIwd2ViYXBwJTVDbm9kZV9tb2R1bGVzJTVDbmV4dCU1Q2Rpc3QlNUNjbGllbnQlNUNjb21wb25lbnRzJTVDYXBwLXJvdXRlci5qcyZtb2R1bGVzPUMlM0ElNUN2cyUyMGNvZGUlMjBwcm9qZWN0cyU1Q2JvaWxlcnBsYXRlJTIwY29kZSUyMHdlYmFwcCU1Q25vZGVfbW9kdWxlcyU1Q25leHQlNUNkaXN0JTVDY2xpZW50JTVDY29tcG9uZW50cyU1Q2Vycm9yLWJvdW5kYXJ5LmpzJm1vZHVsZXM9QyUzQSU1Q3ZzJTIwY29kZSUyMHByb2plY3RzJTVDYm9pbGVycGxhdGUlMjBjb2RlJTIwd2ViYXBwJTVDbm9kZV9tb2R1bGVzJTVDbmV4dCU1Q2Rpc3QlNUNjbGllbnQlNUNjb21wb25lbnRzJTVDbGF5b3V0LXJvdXRlci5qcyZtb2R1bGVzPUMlM0ElNUN2cyUyMGNvZGUlMjBwcm9qZWN0cyU1Q2JvaWxlcnBsYXRlJTIwY29kZSUyMHdlYmFwcCU1Q25vZGVfbW9kdWxlcyU1Q25leHQlNUNkaXN0JTVDY2xpZW50JTVDY29tcG9uZW50cyU1Q25vdC1mb3VuZC1ib3VuZGFyeS5qcyZtb2R1bGVzPUMlM0ElNUN2cyUyMGNvZGUlMjBwcm9qZWN0cyU1Q2JvaWxlcnBsYXRlJTIwY29kZSUyMHdlYmFwcCU1Q25vZGVfbW9kdWxlcyU1Q25leHQlNUNkaXN0JTVDY2xpZW50JTVDY29tcG9uZW50cyU1Q3JlbmRlci1mcm9tLXRlbXBsYXRlLWNvbnRleHQuanMmbW9kdWxlcz1DJTNBJTVDdnMlMjBjb2RlJTIwcHJvamVjdHMlNUNib2lsZXJwbGF0ZSUyMGNvZGUlMjB3ZWJhcHAlNUNub2RlX21vZHVsZXMlNUNuZXh0JTVDZGlzdCU1Q2NsaWVudCU1Q2NvbXBvbmVudHMlNUNzdGF0aWMtZ2VuZXJhdGlvbi1zZWFyY2hwYXJhbXMtYmFpbG91dC1wcm92aWRlci5qcyZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsa09BQStJO0FBQy9JLDBPQUFtSjtBQUNuSix3T0FBa0o7QUFDbEosa1BBQXVKO0FBQ3ZKLHNRQUFpSztBQUNqSyIsInNvdXJjZXMiOlsid2VicGFjazovL2NvZGVib2lsZXIvPzA3ZjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFx2cyBjb2RlIHByb2plY3RzXFxcXGJvaWxlcnBsYXRlIGNvZGUgd2ViYXBwXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcYXBwLXJvdXRlci5qc1wiKTtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcdnMgY29kZSBwcm9qZWN0c1xcXFxib2lsZXJwbGF0ZSBjb2RlIHdlYmFwcFxcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGNsaWVudFxcXFxjb21wb25lbnRzXFxcXGVycm9yLWJvdW5kYXJ5LmpzXCIpO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFx2cyBjb2RlIHByb2plY3RzXFxcXGJvaWxlcnBsYXRlIGNvZGUgd2ViYXBwXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcbGF5b3V0LXJvdXRlci5qc1wiKTtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcdnMgY29kZSBwcm9qZWN0c1xcXFxib2lsZXJwbGF0ZSBjb2RlIHdlYmFwcFxcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGNsaWVudFxcXFxjb21wb25lbnRzXFxcXG5vdC1mb3VuZC1ib3VuZGFyeS5qc1wiKTtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcdnMgY29kZSBwcm9qZWN0c1xcXFxib2lsZXJwbGF0ZSBjb2RlIHdlYmFwcFxcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGNsaWVudFxcXFxjb21wb25lbnRzXFxcXHJlbmRlci1mcm9tLXRlbXBsYXRlLWNvbnRleHQuanNcIik7XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkM6XFxcXHZzIGNvZGUgcHJvamVjdHNcXFxcYm9pbGVycGxhdGUgY29kZSB3ZWJhcHBcXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxzdGF0aWMtZ2VuZXJhdGlvbi1zZWFyY2hwYXJhbXMtYmFpbG91dC1wcm92aWRlci5qc1wiKSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Capp-router.js&modules=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Cerror-boundary.js&modules=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Clayout-router.js&modules=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Cnot-found-boundary.js&modules=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Crender-from-template-context.js&modules=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Cstatic-generation-searchparams-bailout-provider.js&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp%5Cnode_modules%5Cnext%5Cfont%5Cgoogle%5Ctarget.css%3F%7B%22path%22%3A%22app%5C%5Clayout.tsx%22%2C%22import%22%3A%22Inter%22%2C%22arguments%22%3A%5B%7B%22subsets%22%3A%5B%22latin%22%5D%7D%5D%2C%22variableName%22%3A%22inter%22%7D&modules=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp%5Capp%5Cglobals.css&server=true!":
/*!**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp%5Cnode_modules%5Cnext%5Cfont%5Cgoogle%5Ctarget.css%3F%7B%22path%22%3A%22app%5C%5Clayout.tsx%22%2C%22import%22%3A%22Inter%22%2C%22arguments%22%3A%5B%7B%22subsets%22%3A%5B%22latin%22%5D%7D%5D%2C%22variableName%22%3A%22inter%22%7D&modules=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp%5Capp%5Cglobals.css&server=true! ***!
  \**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./app/api/[slug]/_components/api-details-client.tsx":
/*!***********************************************************!*\
  !*** ./app/api/[slug]/_components/api-details-client.tsx ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ APIDetailsClient)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_Check_Copy_ExternalLink_lucide_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=Check,Copy,ExternalLink!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/external-link.mjs\");\n/* harmony import */ var _barrel_optimize_names_Check_Copy_ExternalLink_lucide_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=Check,Copy,ExternalLink!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/check.mjs\");\n/* harmony import */ var _barrel_optimize_names_Check_Copy_ExternalLink_lucide_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! __barrel_optimize__?names=Check,Copy,ExternalLink!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/copy.mjs\");\n/* harmony import */ var _lib_code_generator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/code-generator */ \"(ssr)/./lib/code-generator.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\n\nfunction APIDetailsClient({ api }) {\n    const [selectedLanguage, setSelectedLanguage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"javascript\");\n    const [selectedFramework, setSelectedFramework] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"vanilla\");\n    const [copied, setCopied] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const code = (0,_lib_code_generator__WEBPACK_IMPORTED_MODULE_2__.generateCode)(api, selectedLanguage, selectedFramework);\n    const copyToClipboard = async ()=>{\n        await navigator.clipboard.writeText(code);\n        setCopied(true);\n        setTimeout(()=>setCopied(false), 2000);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"container mx-auto px-4 py-8\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"mb-8\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center gap-4 mb-4\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"text-4xl\",\n                                    children: api.icon\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                                    lineNumber: 31,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                                            className: \"text-4xl font-bold text-white mb-2\",\n                                            children: api.name\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                                            lineNumber: 33,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            className: \"text-xl text-gray-300\",\n                                            children: api.description\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                                            lineNumber: 34,\n                                            columnNumber: 15\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                                    lineNumber: 32,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                            lineNumber: 30,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center gap-4 text-sm text-gray-400\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"bg-purple-600 text-white px-3 py-1 rounded-full\",\n                                    children: api.category\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                                    lineNumber: 39,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"flex items-center gap-1\",\n                                    children: [\n                                        \"⭐ \",\n                                        api.popularity,\n                                        \"% popularity\"\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                                    lineNumber: 42,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                    href: api.documentation,\n                                    target: \"_blank\",\n                                    rel: \"noopener noreferrer\",\n                                    className: \"flex items-center gap-1 hover:text-white transition-colors\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Check_Copy_ExternalLink_lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                                            className: \"w-4 h-4\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                                            lineNumber: 51,\n                                            columnNumber: 15\n                                        }, this),\n                                        \"Documentation\"\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                                    lineNumber: 45,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                            lineNumber: 38,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                    lineNumber: 29,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"mb-8\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                            className: \"text-2xl font-bold text-white mb-4\",\n                            children: \"Features\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                            lineNumber: 59,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"grid grid-cols-2 md:grid-cols-3 gap-3\",\n                            children: api.features.map((feature, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"bg-slate-800 rounded-lg p-3\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-gray-300\",\n                                        children: feature\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                                        lineNumber: 63,\n                                        columnNumber: 17\n                                    }, this)\n                                }, index, false, {\n                                    fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                                    lineNumber: 62,\n                                    columnNumber: 15\n                                }, this))\n                        }, void 0, false, {\n                            fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                            lineNumber: 60,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                    lineNumber: 58,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"bg-slate-800 rounded-lg overflow-hidden\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center justify-between p-4 border-b border-slate-700\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                    className: \"text-xl font-bold text-white\",\n                                    children: \"Code Example\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                                    lineNumber: 72,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex items-center gap-4\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                            value: selectedLanguage,\n                                            onChange: (e)=>setSelectedLanguage(e.target.value),\n                                            className: \"bg-slate-700 text-white rounded px-3 py-1 border border-slate-600\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                    value: \"javascript\",\n                                                    children: \"JavaScript\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                                                    lineNumber: 80,\n                                                    columnNumber: 17\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                    value: \"typescript\",\n                                                    children: \"TypeScript\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                                                    lineNumber: 81,\n                                                    columnNumber: 17\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                    value: \"python\",\n                                                    children: \"Python\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                                                    lineNumber: 82,\n                                                    columnNumber: 17\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                                            lineNumber: 75,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                            value: selectedFramework,\n                                            onChange: (e)=>setSelectedFramework(e.target.value),\n                                            className: \"bg-slate-700 text-white rounded px-3 py-1 border border-slate-600\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                    value: \"vanilla\",\n                                                    children: \"Vanilla\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                                                    lineNumber: 91,\n                                                    columnNumber: 17\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                    value: \"react\",\n                                                    children: \"React\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                                                    lineNumber: 92,\n                                                    columnNumber: 17\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                    value: \"vue\",\n                                                    children: \"Vue\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                                                    lineNumber: 93,\n                                                    columnNumber: 17\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                    value: \"angular\",\n                                                    children: \"Angular\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                                                    lineNumber: 94,\n                                                    columnNumber: 17\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                                            lineNumber: 86,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: copyToClipboard,\n                                            className: \"flex items-center gap-2 bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded transition-colors\",\n                                            children: [\n                                                copied ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Check_Copy_ExternalLink_lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                                    className: \"w-4 h-4\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                                                    lineNumber: 102,\n                                                    columnNumber: 27\n                                                }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Check_Copy_ExternalLink_lucide_react__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                                                    className: \"w-4 h-4\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                                                    lineNumber: 102,\n                                                    columnNumber: 59\n                                                }, this),\n                                                copied ? \"Copied!\" : \"Copy\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                                            lineNumber: 98,\n                                            columnNumber: 15\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                                    lineNumber: 73,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                            lineNumber: 71,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"relative\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"pre\", {\n                                className: \"p-4 overflow-x-auto text-sm\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"code\", {\n                                    className: \"text-gray-300\",\n                                    children: code\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                                    lineNumber: 110,\n                                    columnNumber: 15\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                                lineNumber: 109,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                            lineNumber: 108,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n                    lineNumber: 70,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n            lineNumber: 27,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-client.tsx\",\n        lineNumber: 26,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./app/api/[slug]/_components/api-details-client.tsx\n");

/***/ }),

/***/ "(ssr)/./lib/code-generator.ts":
/*!*******************************!*\
  !*** ./lib/code-generator.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateCode: () => (/* binding */ generateCode)\n/* harmony export */ });\nfunction generateCode(api, language, framework) {\n    // Get the template for the specific language and framework\n    const template = api.codeTemplates?.[language]?.[framework];\n    if (template) {\n        return template;\n    }\n    // Fallback to vanilla if framework not found\n    const vanillaTemplate = api.codeTemplates?.[language]?.[\"vanilla\"];\n    if (vanillaTemplate) {\n        return vanillaTemplate;\n    }\n    // Generate a basic template if none exists\n    return generateFallbackCode(api, language, framework);\n}\nfunction generateFallbackCode(api, language, framework) {\n    if (!api) {\n        return `// API template not found`;\n    }\n    const templates = {\n        javascript: {\n            vanilla: `// ${api.name} Integration\n// ${api.description}\n\nconst apiKey = 'YOUR_API_KEY';\nconst baseURL = 'https://api.${api.name.toLowerCase()}.com';\n\n// Initialize ${api.name} client\nclass ${api.name}Client {\n  constructor(apiKey) {\n    this.apiKey = apiKey;\n    this.baseURL = baseURL;\n  }\n\n  async makeRequest(endpoint, options = {}) {\n    const url = \\`\\${this.baseURL}\\${endpoint}\\`;\n    const config = {\n      headers: {\n        'Authorization': \\`Bearer \\${this.apiKey}\\`,\n        'Content-Type': 'application/json',\n        ...options.headers\n      },\n      ...options\n    };\n\n    try {\n      const response = await fetch(url, config);\n      \n      if (!response.ok) {\n        throw new Error(\\`HTTP error! status: \\${response.status}\\`);\n      }\n      \n      return await response.json();\n    } catch (error) {\n      console.error('${api.name} API Error:', error);\n      throw error;\n    }\n  }\n\n  // Example method - customize based on API\n  async getData() {\n    return this.makeRequest('/data');\n  }\n}\n\n// Usage example\nconst client = new ${api.name}Client(apiKey);\n\n// Example usage\nclient.getData()\n  .then(data => {\n    console.log('Success:', data);\n  })\n  .catch(error => {\n    console.error('Error:', error);\n  });`,\n            react: `// ${api.name} React Hook\nimport React, { useState, useEffect } from 'react';\n\nconst API_KEY = 'YOUR_API_KEY';\nconst BASE_URL = 'https://api.${api.name.toLowerCase()}.com';\n\n// Custom hook for ${api.name}\nexport const use${api.name} = () => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const makeRequest = async (endpoint, options = {}) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await fetch(\\`\\${BASE_URL}\\${endpoint}\\`, {\n        headers: {\n          'Authorization': \\`Bearer \\${API_KEY}\\`,\n          'Content-Type': 'application/json',\n          ...options.headers\n        },\n        ...options\n      });\n\n      if (!response.ok) {\n        throw new Error(\\`HTTP error! status: \\${response.status}\\`);\n      }\n\n      const result = await response.json();\n      setData(result);\n      return result;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getData = () => makeRequest('/data');\n\n  return { data, loading, error, getData, makeRequest };\n};\n\n// Example component\nexport const ${api.name}Component = () => {\n  const { data, loading, error, getData } = use${api.name}();\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  return (\n    <div>\n      <h2>${api.name} Data</h2>\n      <pre>{JSON.stringify(data, null, 2)}</pre>\n    </div>\n  );\n};`\n        },\n        typescript: {\n            vanilla: `// ${api.name} Integration\n// ${api.description}\n\ninterface ${api.name}Config {\n  apiKey: string;\n  baseURL?: string;\n}\n\ninterface ${api.name}Response<T> {\n  data: T;\n  success: boolean;\n  message?: string;\n}\n\nclass ${api.name}Client {\n  private apiKey: string;\n  private baseURL: string;\n\n  constructor(config: ${api.name}Config) {\n    this.apiKey = config.apiKey;\n    this.baseURL = config.baseURL || 'https://api.${api.name.toLowerCase()}.com';\n  }\n\n  private async makeRequest<T>(\n    endpoint: string, \n    options: RequestInit = {}\n  ): Promise<${api.name}Response<T>> {\n    const url = \\`\\${this.baseURL}\\${endpoint}\\`;\n    const config: RequestInit = {\n      headers: {\n        'Authorization': \\`Bearer \\${this.apiKey}\\`,\n        'Content-Type': 'application/json',\n        ...options.headers\n      },\n      ...options\n    };\n\n    try {\n      const response = await fetch(url, config);\n      \n      if (!response.ok) {\n        throw new Error(\\`HTTP error! status: \\${response.status}\\`);\n      }\n      \n      return await response.json();\n    } catch (error) {\n      console.error('${api.name} API Error:', error);\n      throw error;\n    }\n  }\n\n  public async getData<T>(): Promise<${api.name}Response<T>> {\n    return this.makeRequest<T>('/data');\n  }\n}\n\n// Usage example\nconst client = new ${api.name}Client({\n  apiKey: 'YOUR_API_KEY'\n});\n\n// Example usage with proper typing\nclient.getData<any>()\n  .then(response => {\n    console.log('Success:', response.data);\n  })\n  .catch(error => {\n    console.error('Error:', error);\n  });`\n        },\n        python: {\n            vanilla: `\"\"\"\n${api.name} Integration\n${api.description}\n\"\"\"\n\nimport requests\nimport json\nfrom typing import Dict, Any, Optional\n\nclass ${api.name}Client:\n    def __init__(self, api_key: str, base_url: Optional[str] = None):\n        self.api_key = api_key\n        self.base_url = base_url or \"https://api.${api.name.toLowerCase()}.com\"\n        self.session = requests.Session()\n        self.session.headers.update({\n            \"Authorization\": f\"Bearer {api_key}\",\n            \"Content-Type\": \"application/json\"\n        })\n    \n    def _make_request(self, endpoint: str, method: str = \"GET\", **kwargs) -> Dict[str, Any]:\n        \"\"\"Make HTTP request to ${api.name} API\"\"\"\n        url = f\"{self.base_url}{endpoint}\"\n        \n        try:\n            response = self.session.request(method, url, **kwargs)\n            response.raise_for_status()\n            return response.json()\n        except requests.exceptions.RequestException as e:\n            print(f\"${api.name} API Error: {e}\")\n            raise\n    \n    def get_data(self) -> Dict[str, Any]:\n        \"\"\"Get data from ${api.name} API\"\"\"\n        return self._make_request(\"/data\")\n    \n    def post_data(self, data: Dict[str, Any]) -> Dict[str, Any]:\n        \"\"\"Post data to ${api.name} API\"\"\"\n        return self._make_request(\"/data\", method=\"POST\", json=data)\n\n# Usage example\nif __name__ == \"__main__\":\n    client = ${api.name}Client(api_key=\"YOUR_API_KEY\")\n    \n    try:\n        data = client.get_data()\n        print(\"Success:\", json.dumps(data, indent=2))\n    except Exception as error:\n        print(f\"Error: {error}\")`,\n            django: `\"\"\"\n${api.name} Django Integration\n${api.description}\n\"\"\"\n\nfrom django.conf import settings\nfrom django.http import JsonResponse\nfrom django.views.decorators.http import require_http_methods\nfrom django.views.decorators.csrf import csrf_exempt\nimport requests\nimport json\n\nclass ${api.name}Service:\n    def __init__(self):\n        self.api_key = getattr(settings, '${api.name.upper()}_API_KEY', '')\n        self.base_url = getattr(settings, '${api.name.upper()}_BASE_URL', 'https://api.${api.name.toLowerCase()}.com')\n    \n    def _make_request(self, endpoint, method='GET', data=None):\n        headers = {\n            'Authorization': f'Bearer {self.api_key}',\n            'Content-Type': 'application/json'\n        }\n        \n        url = f\"{self.base_url}{endpoint}\"\n        \n        try:\n            response = requests.request(\n                method=method,\n                url=url,\n                headers=headers,\n                json=data if data else None\n            )\n            response.raise_for_status()\n            return response.json()\n        except requests.exceptions.RequestException as e:\n            raise Exception(f\"${api.name} API Error: {str(e)}\")\n    \n    def get_data(self):\n        return self._make_request('/data')\n\n# Django views\n@require_http_methods([\"GET\"])\ndef get_${api.name.toLowerCase()}_data(request):\n    try:\n        service = ${api.name}Service()\n        data = service.get_data()\n        return JsonResponse({'success': True, 'data': data})\n    except Exception as e:\n        return JsonResponse({'success': False, 'error': str(e)}, status=500)\n\n# Add to settings.py:\n# ${api.name.upper()}_API_KEY = 'your_api_key_here'`\n        },\n        php: {\n            vanilla: `<?php\n/**\n * ${api.name} Integration\n * ${api.description}\n */\n\nclass ${api.name}Client {\n    private $apiKey;\n    private $baseURL;\n    \n    public function __construct($apiKey, $baseURL = null) {\n        $this->apiKey = $apiKey;\n        $this->baseURL = $baseURL ?: 'https://api.${api.name.toLowerCase()}.com';\n    }\n    \n    private function makeRequest($endpoint, $method = 'GET', $data = null) {\n        $url = $this->baseURL . $endpoint;\n        \n        $headers = [\n            'Authorization: Bearer ' . $this->apiKey,\n            'Content-Type: application/json'\n        ];\n        \n        $ch = curl_init();\n        curl_setopt($ch, CURLOPT_URL, $url);\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\n        curl_setopt($ch, CURLOPT_CUSTOMREQUEST, $method);\n        \n        if ($data && in_array($method, ['POST', 'PUT', 'PATCH'])) {\n            curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($data));\n        }\n        \n        $response = curl_exec($ch);\n        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);\n        curl_close($ch);\n        \n        if ($httpCode >= 400) {\n            throw new Exception(\"${api.name} API Error: HTTP $httpCode\");\n        }\n        \n        return json_decode($response, true);\n    }\n    \n    public function getData() {\n        return $this->makeRequest('/data');\n    }\n    \n    public function postData($data) {\n        return $this->makeRequest('/data', 'POST', $data);\n    }\n}\n\n// Usage example\ntry {\n    $client = new ${api.name}Client('YOUR_API_KEY');\n    $data = $client->getData();\n    echo json_encode($data, JSON_PRETTY_PRINT);\n} catch (Exception $e) {\n    echo \"Error: \" . $e->getMessage();\n}\n?>`\n        },\n        go: {\n            vanilla: `package main\n\nimport (\n    \"bytes\"\n    \"encoding/json\"\n    \"fmt\"\n    \"io\"\n    \"net/http\"\n    \"time\"\n)\n\n// ${api.name}Client represents the API client\ntype ${api.name}Client struct {\n    APIKey  string\n    BaseURL string\n    client  *http.Client\n}\n\n// New${api.name}Client creates a new ${api.name} client\nfunc New${api.name}Client(apiKey string) *${api.name}Client {\n    return &${api.name}Client{\n        APIKey:  apiKey,\n        BaseURL: \"https://api.${api.name.toLowerCase()}.com\",\n        client: &http.Client{\n            Timeout: time.Second * 30,\n        },\n    }\n}\n\n// makeRequest makes an HTTP request to the ${api.name} API\nfunc (c *${api.name}Client) makeRequest(endpoint, method string, data interface{}) (map[string]interface{}, error) {\n    url := c.BaseURL + endpoint\n    \n    var body io.Reader\n    if data != nil {\n        jsonData, err := json.Marshal(data)\n        if err != nil {\n            return nil, fmt.Errorf(\"error marshaling data: %v\", err)\n        }\n        body = bytes.NewBuffer(jsonData)\n    }\n    \n    req, err := http.NewRequest(method, url, body)\n    if err != nil {\n        return nil, fmt.Errorf(\"error creating request: %v\", err)\n    }\n    \n    req.Header.Set(\"Authorization\", \"Bearer \"+c.APIKey)\n    req.Header.Set(\"Content-Type\", \"application/json\")\n    \n    resp, err := c.client.Do(req)\n    if err != nil {\n        return nil, fmt.Errorf(\"error making request: %v\", err)\n    }\n    defer resp.Body.Close()\n    \n    if resp.StatusCode >= 400 {\n        return nil, fmt.Errorf(\"API error: %s\", resp.Status)\n    }\n    \n    var result map[string]interface{}\n    if err := json.NewDecoder(resp.Body).Decode(&result); err != nil {\n        return nil, fmt.Errorf(\"error decoding response: %v\", err)\n    }\n    \n    return result, nil\n}\n\n// GetData gets data from ${api.name} API\nfunc (c *${api.name}Client) GetData() (map[string]interface{}, error) {\n    return c.makeRequest(\"/data\", \"GET\", nil)\n}\n\n// PostData posts data to ${api.name} API\nfunc (c *${api.name}Client) PostData(data map[string]interface{}) (map[string]interface{}, error) {\n    return c.makeRequest(\"/data\", \"POST\", data)\n}\n\nfunc main() {\n    client := New${api.name}Client(\"YOUR_API_KEY\")\n    \n    data, err := client.GetData()\n    if err != nil {\n        fmt.Printf(\"Error: %v\\\\n\", err)\n        return\n    }\n    \n    jsonData, _ := json.MarshalIndent(data, \"\", \"  \")\n    fmt.Printf(\"Success: %s\\\\n\", jsonData)\n}`\n        },\n        rust: {\n            vanilla: `use reqwest::{Client, Error as ReqwestError};\nuse serde::{Deserialize, Serialize};\nuse serde_json::Value;\nuse std::collections::HashMap;\n\n/// ${api.name} API Client\n/// ${api.description}\npub struct ${api.name}Client {\n    api_key: String,\n    base_url: String,\n    client: Client,\n}\n\n#[derive(Debug, Serialize, Deserialize)]\npub struct ApiResponse {\n    pub success: bool,\n    pub data: Option<Value>,\n    pub error: Option<String>,\n}\n\nimpl ${api.name}Client {\n    /// Create a new ${api.name} client\n    pub fn new(api_key: String) -> Self {\n        Self {\n            api_key,\n            base_url: \"https://api.${api.name.toLowerCase()}.com\".to_string(),\n            client: Client::new(),\n        }\n    }\n    \n    /// Make a request to the ${api.name} API\n    async fn make_request(\n        &self,\n        endpoint: &str,\n        method: &str,\n        data: Option<&Value>,\n    ) -> Result<Value, ReqwestError> {\n        let url = format!(\"{}{}\", self.base_url, endpoint);\n        \n        let mut request = match method.to_uppercase().as_str() {\n            \"GET\" => self.client.get(&url),\n            \"POST\" => self.client.post(&url),\n            \"PUT\" => self.client.put(&url),\n            \"DELETE\" => self.client.delete(&url),\n            _ => self.client.get(&url),\n        };\n        \n        request = request\n            .header(\"Authorization\", format!(\"Bearer {}\", self.api_key))\n            .header(\"Content-Type\", \"application/json\");\n        \n        if let Some(body) = data {\n            request = request.json(body);\n        }\n        \n        let response = request.send().await?;\n        let json: Value = response.json().await?;\n        \n        Ok(json)\n    }\n    \n    /// Get data from ${api.name} API\n    pub async fn get_data(&self) -> Result<Value, ReqwestError> {\n        self.make_request(\"/data\", \"GET\", None).await\n    }\n    \n    /// Post data to ${api.name} API\n    pub async fn post_data(&self, data: &Value) -> Result<Value, ReqwestError> {\n        self.make_request(\"/data\", \"POST\", Some(data)).await\n    }\n}\n\n#[tokio::main]\nasync fn main() -> Result<(), Box<dyn std::error::Error>> {\n    let client = ${api.name}Client::new(\"YOUR_API_KEY\".to_string());\n    \n    match client.get_data().await {\n        Ok(data) => {\n            println!(\"Success: {}\", serde_json::to_string_pretty(&data)?);\n        }\n        Err(error) => {\n            eprintln!(\"Error: {}\", error);\n        }\n    }\n    \n    Ok(())\n}\n\n// Add to Cargo.toml:\n// [dependencies]\n// reqwest = { version = \"0.11\", features = [\"json\"] }\n// serde = { version = \"1.0\", features = [\"derive\"] }\n// serde_json = \"1.0\"\n// tokio = { version = \"1\", features = [\"full\"] }`\n        }\n    };\n    return templates[language]?.[framework] || templates[language]?.vanilla || `// ${api.name} integration code not available for ${language} with ${framework} framework`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./lib/code-generator.ts\n");

/***/ }),

/***/ "(rsc)/./app/globals.css":
/*!*************************!*\
  !*** ./app/globals.css ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"b9917786d010\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLGNBQWM7QUFDN0IsSUFBSSxLQUFVLEVBQUUsRUFBdUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jb2RlYm9pbGVyLy4vYXBwL2dsb2JhbHMuY3NzP2U0MmMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJiOTkxNzc4NmQwMTBcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./app/globals.css\n");

/***/ }),

/***/ "(rsc)/./app/api/[slug]/_components/api-details-client.tsx":
/*!***********************************************************!*\
  !*** ./app/api/[slug]/_components/api-details-client.tsx ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   $$typeof: () => (/* binding */ $$typeof),
/* harmony export */   __esModule: () => (/* binding */ __esModule),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/build/webpack/loaders/next-flight-loader/module-proxy */ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/module-proxy.js");

const proxy = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`C:\vs code projects\boilerplate code webapp\app\api\[slug]\_components\api-details-client.tsx`)

// Accessing the __esModule property and exporting $$typeof are required here.
// The __esModule getter forces the proxy target to create the default export
// and the $$typeof value is for rendering logic to determine if the module
// is a client boundary.
const { __esModule, $$typeof } = proxy;
const __default__ = proxy.default;


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__default__);

/***/ }),

/***/ "(rsc)/./app/api/[slug]/_components/api-details-wrapper.tsx":
/*!************************************************************!*\
  !*** ./app/api/[slug]/_components/api-details-wrapper.tsx ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ APIDetailsWrapper)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _api_details_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./api-details-client */ \"(rsc)/./app/api/[slug]/_components/api-details-client.tsx\");\n\n\nfunction APIDetailsWrapper({ initialApiData }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_api_details_client__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n        api: initialApiData\n    }, void 0, false, {\n        fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\_components\\\\api-details-wrapper.tsx\",\n        lineNumber: 9,\n        columnNumber: 10\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL1tzbHVnXS9fY29tcG9uZW50cy9hcGktZGV0YWlscy13cmFwcGVyLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFtRDtBQU9wQyxTQUFTQyxrQkFBa0IsRUFBRUMsY0FBYyxFQUEwQjtJQUNsRixxQkFBTyw4REFBQ0YsMkRBQWdCQTtRQUFDRyxLQUFLRDs7Ozs7O0FBQ2hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY29kZWJvaWxlci8uL2FwcC9hcGkvW3NsdWddL19jb21wb25lbnRzL2FwaS1kZXRhaWxzLXdyYXBwZXIudHN4P2ZkMWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEFQSURldGFpbHNDbGllbnQgZnJvbSAnLi9hcGktZGV0YWlscy1jbGllbnQnXG5pbXBvcnQgdHlwZSB7IEFQSVRlbXBsYXRlIH0gZnJvbSAnQC90eXBlcy9hcGknXG5cbmludGVyZmFjZSBBUElEZXRhaWxzV3JhcHBlclByb3BzIHtcbiAgaW5pdGlhbEFwaURhdGE6IEFQSVRlbXBsYXRlIHwgbnVsbFxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBBUElEZXRhaWxzV3JhcHBlcih7IGluaXRpYWxBcGlEYXRhIH06IEFQSURldGFpbHNXcmFwcGVyUHJvcHMpIHtcbiAgcmV0dXJuIDxBUElEZXRhaWxzQ2xpZW50IGFwaT17aW5pdGlhbEFwaURhdGF9IC8+XG59Il0sIm5hbWVzIjpbIkFQSURldGFpbHNDbGllbnQiLCJBUElEZXRhaWxzV3JhcHBlciIsImluaXRpYWxBcGlEYXRhIiwiYXBpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/api/[slug]/_components/api-details-wrapper.tsx\n");

/***/ }),

/***/ "(rsc)/./app/api/[slug]/page.tsx":
/*!*********************************!*\
  !*** ./app/api/[slug]/page.tsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ APIPage),\n/* harmony export */   generateStaticParams: () => (/* binding */ generateStaticParams)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_api_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/api-data */ \"(rsc)/./lib/api-data.ts\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(rsc)/./node_modules/next/navigation.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_navigation__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _components_api_details_wrapper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_components/api-details-wrapper */ \"(rsc)/./app/api/[slug]/_components/api-details-wrapper.tsx\");\n\n\n\n\nasync function generateStaticParams() {\n    const apis = (0,_lib_api_data__WEBPACK_IMPORTED_MODULE_1__.getAllAPIs)();\n    return apis.map((api)=>({\n            slug: api.slug\n        }));\n}\nfunction APIPage({ params }) {\n    const api = (0,_lib_api_data__WEBPACK_IMPORTED_MODULE_1__.getAPIBySlug)(params.slug);\n    if (!api) {\n        (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.notFound)();\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_api_details_wrapper__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        initialApiData: api\n    }, void 0, false, {\n        fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\api\\\\[slug]\\\\page.tsx\",\n        lineNumber: 19,\n        columnNumber: 10\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL1tzbHVnXS9wYWdlLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBeUQ7QUFDZjtBQUN1QjtBQUUxRCxlQUFlSTtJQUNwQixNQUFNQyxPQUFPSix5REFBVUE7SUFDdkIsT0FBT0ksS0FBS0MsR0FBRyxDQUFDLENBQUNDLE1BQVM7WUFDeEJDLE1BQU1ELElBQUlDLElBQUk7UUFDaEI7QUFDRjtBQUVlLFNBQVNDLFFBQVEsRUFBRUMsTUFBTSxFQUFnQztJQUN0RSxNQUFNSCxNQUFNUCwyREFBWUEsQ0FBQ1UsT0FBT0YsSUFBSTtJQUVwQyxJQUFJLENBQUNELEtBQUs7UUFDUkwseURBQVFBO0lBQ1Y7SUFFQSxxQkFBTyw4REFBQ0MsdUVBQWlCQTtRQUFDUSxnQkFBZ0JKOzs7Ozs7QUFDNUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jb2RlYm9pbGVyLy4vYXBwL2FwaS9bc2x1Z10vcGFnZS50c3g/OTE2OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRBUElCeVNsdWcsIGdldEFsbEFQSXMgfSBmcm9tICdAL2xpYi9hcGktZGF0YSdcbmltcG9ydCB7IG5vdEZvdW5kIH0gZnJvbSAnbmV4dC9uYXZpZ2F0aW9uJ1xuaW1wb3J0IEFQSURldGFpbHNXcmFwcGVyIGZyb20gJy4vX2NvbXBvbmVudHMvYXBpLWRldGFpbHMtd3JhcHBlcidcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdlbmVyYXRlU3RhdGljUGFyYW1zKCkge1xuICBjb25zdCBhcGlzID0gZ2V0QWxsQVBJcygpXG4gIHJldHVybiBhcGlzLm1hcCgoYXBpKSA9PiAoe1xuICAgIHNsdWc6IGFwaS5zbHVnLFxuICB9KSlcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQVBJUGFnZSh7IHBhcmFtcyB9OiB7IHBhcmFtczogeyBzbHVnOiBzdHJpbmcgfSB9KSB7XG4gIGNvbnN0IGFwaSA9IGdldEFQSUJ5U2x1ZyhwYXJhbXMuc2x1ZylcbiAgXG4gIGlmICghYXBpKSB7XG4gICAgbm90Rm91bmQoKVxuICB9XG4gIFxuICByZXR1cm4gPEFQSURldGFpbHNXcmFwcGVyIGluaXRpYWxBcGlEYXRhPXthcGl9IC8+XG59Il0sIm5hbWVzIjpbImdldEFQSUJ5U2x1ZyIsImdldEFsbEFQSXMiLCJub3RGb3VuZCIsIkFQSURldGFpbHNXcmFwcGVyIiwiZ2VuZXJhdGVTdGF0aWNQYXJhbXMiLCJhcGlzIiwibWFwIiwiYXBpIiwic2x1ZyIsIkFQSVBhZ2UiLCJwYXJhbXMiLCJpbml0aWFsQXBpRGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./app/api/[slug]/page.tsx\n");

/***/ }),

/***/ "(rsc)/./app/layout.tsx":
/*!************************!*\
  !*** ./app/layout.tsx ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RootLayout),\n/* harmony export */   metadata: () => (/* binding */ metadata)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_font_google_target_css_path_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/font/google/target.css?{\"path\":\"app\\\\layout.tsx\",\"import\":\"Inter\",\"arguments\":[{\"subsets\":[\"latin\"]}],\"variableName\":\"inter\"} */ \"(rsc)/./node_modules/next/font/google/target.css?{\\\"path\\\":\\\"app\\\\\\\\layout.tsx\\\",\\\"import\\\":\\\"Inter\\\",\\\"arguments\\\":[{\\\"subsets\\\":[\\\"latin\\\"]}],\\\"variableName\\\":\\\"inter\\\"}\");\n/* harmony import */ var next_font_google_target_css_path_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_font_google_target_css_path_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./globals.css */ \"(rsc)/./app/globals.css\");\n\n\n\nconst metadata = {\n    title: \"CodeBoiler - API Code Generator\",\n    description: \"Generate production-ready API integration code\"\n};\nfunction RootLayout({ children }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"html\", {\n        lang: \"en\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"body\", {\n            className: (next_font_google_target_css_path_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_2___default().className),\n            children: children\n        }, void 0, false, {\n            fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\layout.tsx\",\n            lineNumber: 18,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"C:\\\\vs code projects\\\\boilerplate code webapp\\\\app\\\\layout.tsx\",\n        lineNumber: 17,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvbGF5b3V0LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUdNQTtBQUhnQjtBQUtmLE1BQU1DLFdBQVc7SUFDdEJDLE9BQU87SUFDUEMsYUFBYTtBQUNmLEVBQUM7QUFFYyxTQUFTQyxXQUFXLEVBQ2pDQyxRQUFRLEVBR1Q7SUFDQyxxQkFDRSw4REFBQ0M7UUFBS0MsTUFBSztrQkFDVCw0RUFBQ0M7WUFBS0MsV0FBV1QsMkpBQWU7c0JBQUdLOzs7Ozs7Ozs7OztBQUd6QyIsInNvdXJjZXMiOlsid2VicGFjazovL2NvZGVib2lsZXIvLi9hcHAvbGF5b3V0LnRzeD85OTg4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnLi9nbG9iYWxzLmNzcydcbmltcG9ydCB7IEludGVyIH0gZnJvbSAnbmV4dC9mb250L2dvb2dsZSdcblxuY29uc3QgaW50ZXIgPSBJbnRlcih7IHN1YnNldHM6IFsnbGF0aW4nXSB9KVxuXG5leHBvcnQgY29uc3QgbWV0YWRhdGEgPSB7XG4gIHRpdGxlOiAnQ29kZUJvaWxlciAtIEFQSSBDb2RlIEdlbmVyYXRvcicsXG4gIGRlc2NyaXB0aW9uOiAnR2VuZXJhdGUgcHJvZHVjdGlvbi1yZWFkeSBBUEkgaW50ZWdyYXRpb24gY29kZScsXG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFJvb3RMYXlvdXQoe1xuICBjaGlsZHJlbixcbn06IHtcbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZVxufSkge1xuICByZXR1cm4gKFxuICAgIDxodG1sIGxhbmc9XCJlblwiPlxuICAgICAgPGJvZHkgY2xhc3NOYW1lPXtpbnRlci5jbGFzc05hbWV9PntjaGlsZHJlbn08L2JvZHk+XG4gICAgPC9odG1sPlxuICApXG59Il0sIm5hbWVzIjpbImludGVyIiwibWV0YWRhdGEiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiUm9vdExheW91dCIsImNoaWxkcmVuIiwiaHRtbCIsImxhbmciLCJib2R5IiwiY2xhc3NOYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/layout.tsx\n");

/***/ }),

/***/ "(rsc)/./lib/api-data.ts":
/*!*************************!*\
  !*** ./lib/api-data.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiTemplates: () => (/* binding */ apiTemplates),\n/* harmony export */   categories: () => (/* binding */ categories),\n/* harmony export */   getAPIBySlug: () => (/* binding */ getAPIBySlug),\n/* harmony export */   getAPIsByCategory: () => (/* binding */ getAPIsByCategory),\n/* harmony export */   getAllAPIs: () => (/* binding */ getAllAPIs),\n/* harmony export */   getCategories: () => (/* binding */ getCategories),\n/* harmony export */   getCategoryIcon: () => (/* binding */ getCategoryIcon),\n/* harmony export */   getPopularAPIs: () => (/* binding */ getPopularAPIs)\n/* harmony export */ });\n// Mock API data - in production this would come from a database or API\nconst apiTemplates = [\n    // PAYMENT PROCESSING APIS\n    {\n        id: \"stripe\",\n        slug: \"stripe\",\n        name: \"Stripe\",\n        category: \"Payment Processing\",\n        description: \"Complete payment processing with subscriptions, webhooks, and marketplace functionality.\",\n        icon: \"\\uD83D\\uDCB3\",\n        features: [\n            \"Payment Intents API\",\n            \"Subscription Management\",\n            \"Webhook Handling\",\n            \"Customer Portal\",\n            \"Multi-party Payments\",\n            \"Strong Customer Authentication\"\n        ],\n        popularity: 98,\n        documentation: \"https://stripe.com/docs\",\n        codeTemplates: {\n            javascript: {\n                vanilla: `// Stripe Payment Integration\nconst stripe = require('stripe')('sk_test_...');\n\nclass StripePayments {\n  constructor(secretKey) {\n    this.stripe = require('stripe')(secretKey);\n  }\n\n  async createPaymentIntent(amount, currency = 'usd', customerId = null) {\n    try {\n      const paymentIntent = await this.stripe.paymentIntents.create({\n        amount: amount * 100, // Convert to cents\n        currency,\n        customer: customerId,\n        automatic_payment_methods: {\n          enabled: true,\n        },\n      });\n\n      return {\n        success: true,\n        clientSecret: paymentIntent.client_secret,\n        paymentIntentId: paymentIntent.id\n      };\n    } catch (error) {\n      console.error('Stripe Payment Error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  async createCustomer(email, name) {\n    try {\n      const customer = await this.stripe.customers.create({\n        email,\n        name,\n      });\n\n      return {\n        success: true,\n        customerId: customer.id\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  async handleWebhook(body, signature, webhookSecret) {\n    try {\n      const event = this.stripe.webhooks.constructEvent(\n        body,\n        signature,\n        webhookSecret\n      );\n\n      switch (event.type) {\n        case 'payment_intent.succeeded':\n          console.log('Payment succeeded:', event.data.object);\n          break;\n        case 'payment_intent.payment_failed':\n          console.log('Payment failed:', event.data.object);\n          break;\n        default:\n          console.log(\\`Unhandled event type \\${event.type}\\`);\n      }\n\n      return { success: true };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n}\n\n// Usage\nconst payments = new StripePayments('sk_test_your_key');\npayments.createPaymentIntent(29.99).then(console.log);`,\n                react: `// Stripe React Integration with Elements\nimport React, { useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport {\n  Elements,\n  CardElement,\n  useStripe,\n  useElements\n} from '@stripe/react-stripe-js';\n\nconst stripePromise = loadStripe('pk_test_your_publishable_key');\n\nconst CheckoutForm = () => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    if (!stripe || !elements) {\n      return;\n    }\n\n    // Create payment intent on your server\n    const response = await fetch('/create-payment-intent', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        amount: 2999, // $29.99\n        currency: 'usd',\n      }),\n    });\n\n    const { client_secret } = await response.json();\n\n    const result = await stripe.confirmCardPayment(client_secret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n        billing_details: {\n          name: 'Customer Name',\n        },\n      },\n    });\n\n    if (result.error) {\n      setError(result.error.message);\n    } else {\n      setSuccess(true);\n    }\n\n    setLoading(false);\n  };\n\n  if (success) {\n    return <div className=\"success\">Payment successful!</div>;\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"payment-form\">\n      <div className=\"card-element-container\">\n        <CardElement\n          options={{\n            style: {\n              base: {\n                fontSize: '16px',\n                color: '#424770',\n                '::placeholder': {\n                  color: '#aab7c4',\n                },\n              },\n            },\n          }}\n        />\n      </div>\n      \n      {error && <div className=\"error\">{error}</div>}\n      \n      <button\n        type=\"submit\"\n        disabled={!stripe || loading}\n        className=\"pay-button\"\n      >\n        {loading ? 'Processing...' : 'Pay Now'}\n      </button>\n    </form>\n  );\n};\n\nexport const StripeCheckout = () => {\n  return (\n    <Elements stripe={stripePromise}>\n      <CheckoutForm />\n    </Elements>\n  );\n};`\n            },\n            typescript: {\n                vanilla: `// Stripe TypeScript Integration\nimport Stripe from 'stripe';\n\ninterface PaymentResult {\n  success: boolean;\n  clientSecret?: string;\n  paymentIntentId?: string;\n  error?: string;\n}\n\ninterface CustomerResult {\n  success: boolean;\n  customerId?: string;\n  error?: string;\n}\n\nclass StripePayments {\n  private stripe: Stripe;\n\n  constructor(secretKey: string) {\n    this.stripe = new Stripe(secretKey, {\n      apiVersion: '2023-10-16',\n    });\n  }\n\n  async createPaymentIntent(\n    amount: number,\n    currency: string = 'usd',\n    customerId?: string\n  ): Promise<PaymentResult> {\n    try {\n      const params: Stripe.PaymentIntentCreateParams = {\n        amount: Math.round(amount * 100), // Convert to cents\n        currency,\n        automatic_payment_methods: {\n          enabled: true,\n        },\n      };\n\n      if (customerId) {\n        params.customer = customerId;\n      }\n\n      const paymentIntent = await this.stripe.paymentIntents.create(params);\n\n      return {\n        success: true,\n        clientSecret: paymentIntent.client_secret!,\n        paymentIntentId: paymentIntent.id\n      };\n    } catch (error) {\n      console.error('Stripe Payment Error:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error'\n      };\n    }\n  }\n\n  async createCustomer(email: string, name: string): Promise<CustomerResult> {\n    try {\n      const customer = await this.stripe.customers.create({\n        email,\n        name,\n      });\n\n      return {\n        success: true,\n        customerId: customer.id\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error'\n      };\n    }\n  }\n\n  async createSubscription(\n    customerId: string,\n    priceId: string\n  ): Promise<{ success: boolean; subscriptionId?: string; error?: string }> {\n    try {\n      const subscription = await this.stripe.subscriptions.create({\n        customer: customerId,\n        items: [{ price: priceId }],\n        payment_behavior: 'default_incomplete',\n        payment_settings: { save_default_payment_method: 'on_subscription' },\n        expand: ['latest_invoice.payment_intent'],\n      });\n\n      return {\n        success: true,\n        subscriptionId: subscription.id\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error'\n      };\n    }\n  }\n\n  async handleWebhook(\n    body: string,\n    signature: string,\n    webhookSecret: string\n  ): Promise<{ success: boolean; error?: string }> {\n    try {\n      const event = this.stripe.webhooks.constructEvent(\n        body,\n        signature,\n        webhookSecret\n      );\n\n      switch (event.type) {\n        case 'payment_intent.succeeded':\n          console.log('Payment succeeded:', event.data.object);\n          break;\n        case 'payment_intent.payment_failed':\n          console.log('Payment failed:', event.data.object);\n          break;\n        case 'customer.subscription.created':\n          console.log('Subscription created:', event.data.object);\n          break;\n        case 'invoice.payment_succeeded':\n          console.log('Invoice paid:', event.data.object);\n          break;\n        default:\n          console.log(\\`Unhandled event type \\${event.type}\\`);\n      }\n\n      return { success: true };\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Invalid signature'\n      };\n    }\n  }\n}\n\n// Usage\nconst payments = new StripePayments('sk_test_your_key');\n\nasync function processPayment() {\n  const result = await payments.createPaymentIntent(29.99, 'usd');\n  \n  if (result.success) {\n    console.log('Payment Intent created:', result.paymentIntentId);\n  } else {\n    console.error('Payment failed:', result.error);\n  }\n}\n\nprocessPayment();`\n            },\n            python: {\n                vanilla: `\"\"\"\nStripe Python Integration\nComplete payment processing with subscriptions and webhooks\n\"\"\"\n\nimport stripe\nfrom typing import Dict, Any, Optional\n\nclass StripePayments:\n    def __init__(self, secret_key: str):\n        stripe.api_key = secret_key\n        self.stripe = stripe\n    \n    def create_payment_intent(\n        self, \n        amount: float, \n        currency: str = \"usd\", \n        customer_id: Optional[str] = None\n    ) -> Dict[str, Any]:\n        \"\"\"Create a payment intent for the specified amount\"\"\"\n        try:\n            params = {\n                \"amount\": int(amount * 100),  # Convert to cents\n                \"currency\": currency,\n                \"automatic_payment_methods\": {\"enabled\": True}\n            }\n            \n            if customer_id:\n                params[\"customer\"] = customer_id\n            \n            payment_intent = self.stripe.PaymentIntent.create(**params)\n            \n            return {\n                \"success\": True,\n                \"client_secret\": payment_intent.client_secret,\n                \"payment_intent_id\": payment_intent.id\n            }\n        except stripe.error.StripeError as e:\n            return {\n                \"success\": False,\n                \"error\": str(e)\n            }\n    \n    def create_customer(self, email: str, name: str) -> Dict[str, Any]:\n        \"\"\"Create a new Stripe customer\"\"\"\n        try:\n            customer = self.stripe.Customer.create(\n                email=email,\n                name=name\n            )\n            \n            return {\n                \"success\": True,\n                \"customer_id\": customer.id\n            }\n        except stripe.error.StripeError as e:\n            return {\n                \"success\": False,\n                \"error\": str(e)\n            }\n    \n    def create_subscription(\n        self, \n        customer_id: str, \n        price_id: str\n    ) -> Dict[str, Any]:\n        \"\"\"Create a subscription for a customer\"\"\"\n        try:\n            subscription = self.stripe.Subscription.create(\n                customer=customer_id,\n                items=[{\"price\": price_id}],\n                payment_behavior=\"default_incomplete\",\n                payment_settings={\"save_default_payment_method\": \"on_subscription\"},\n                expand=[\"latest_invoice.payment_intent\"]\n            )\n            \n            return {\n                \"success\": True,\n                \"subscription_id\": subscription.id,\n                \"client_secret\": subscription.latest_invoice.payment_intent.client_secret\n            }\n        except stripe.error.StripeError as e:\n            return {\n                \"success\": False,\n                \"error\": str(e)\n            }\n    \n    def handle_webhook(\n        self, \n        payload: bytes, \n        sig_header: str, \n        webhook_secret: str\n    ) -> Dict[str, Any]:\n        \"\"\"Handle Stripe webhook events\"\"\"\n        try:\n            event = self.stripe.Webhook.construct_event(\n                payload, sig_header, webhook_secret\n            )\n            \n            if event[\"type\"] == \"payment_intent.succeeded\":\n                payment_intent = event[\"data\"][\"object\"]\n                print(f\"Payment succeeded: {payment_intent['id']}\")\n                \n            elif event[\"type\"] == \"payment_intent.payment_failed\":\n                payment_intent = event[\"data\"][\"object\"]\n                print(f\"Payment failed: {payment_intent['id']}\")\n                \n            elif event[\"type\"] == \"customer.subscription.created\":\n                subscription = event[\"data\"][\"object\"]\n                print(f\"Subscription created: {subscription['id']}\")\n                \n            elif event[\"type\"] == \"invoice.payment_succeeded\":\n                invoice = event[\"data\"][\"object\"]\n                print(f\"Invoice paid: {invoice['id']}\")\n            \n            return {\"success\": True}\n            \n        except ValueError:\n            return {\"success\": False, \"error\": \"Invalid payload\"}\n        except stripe.error.SignatureVerificationError:\n            return {\"success\": False, \"error\": \"Invalid signature\"}\n\n# Usage example\nif __name__ == \"__main__\":\n    payments = StripePayments(\"sk_test_your_key\")\n    \n    # Create a payment intent\n    result = payments.create_payment_intent(29.99, \"usd\")\n    \n    if result[\"success\"]:\n        print(f\"Payment Intent created: {result['payment_intent_id']}\")\n    else:\n        print(f\"Error: {result['error']}\")`,\n                django: `\"\"\"\nStripe Django Integration\n\"\"\"\n\nfrom django.conf import settings\nfrom django.http import JsonResponse, HttpResponse\nfrom django.views.decorators.csrf import csrf_exempt\nfrom django.views.decorators.http import require_http_methods\nimport stripe\nimport json\n\nstripe.api_key = getattr(settings, 'STRIPE_SECRET_KEY', '')\n\nclass StripeService:\n    @staticmethod\n    def create_payment_intent(amount, currency='usd', customer_id=None):\n        try:\n            params = {\n                'amount': int(amount * 100),\n                'currency': currency,\n                'automatic_payment_methods': {'enabled': True}\n            }\n            \n            if customer_id:\n                params['customer'] = customer_id\n                \n            payment_intent = stripe.PaymentIntent.create(**params)\n            \n            return {\n                'success': True,\n                'client_secret': payment_intent.client_secret,\n                'payment_intent_id': payment_intent.id\n            }\n        except stripe.error.StripeError as e:\n            return {\n                'success': False,\n                'error': str(e)\n            }\n\n    @staticmethod\n    def create_customer(email, name):\n        try:\n            customer = stripe.Customer.create(\n                email=email,\n                name=name\n            )\n            return {\n                'success': True,\n                'customer_id': customer.id\n            }\n        except stripe.error.StripeError as e:\n            return {\n                'success': False,\n                'error': str(e)\n            }\n\n@require_http_methods([\"POST\"])\ndef create_payment_intent(request):\n    try:\n        data = json.loads(request.body)\n        amount = data.get('amount')\n        currency = data.get('currency', 'usd')\n        \n        result = StripeService.create_payment_intent(amount, currency)\n        return JsonResponse(result)\n        \n    except json.JSONDecodeError:\n        return JsonResponse({'success': False, 'error': 'Invalid JSON'}, status=400)\n\n@csrf_exempt\n@require_http_methods([\"POST\"])\ndef stripe_webhook(request):\n    payload = request.body\n    sig_header = request.META.get('HTTP_STRIPE_SIGNATURE')\n    endpoint_secret = getattr(settings, 'STRIPE_WEBHOOK_SECRET', '')\n    \n    try:\n        event = stripe.Webhook.construct_event(\n            payload, sig_header, endpoint_secret\n        )\n    except (ValueError, stripe.error.SignatureVerificationError):\n        return HttpResponse(status=400)\n    \n    if event['type'] == 'payment_intent.succeeded':\n        payment_intent = event['data']['object']\n        # Handle successful payment\n        print(f\"Payment succeeded: {payment_intent['id']}\")\n    \n    return HttpResponse(status=200)\n\n# Add to settings.py:\n# STRIPE_SECRET_KEY = 'sk_test_your_secret_key'\n# STRIPE_PUBLISHABLE_KEY = 'pk_test_your_publishable_key'\n# STRIPE_WEBHOOK_SECRET = 'whsec_your_webhook_secret'`\n            },\n            php: {\n                vanilla: `<?php\n/**\n * Stripe PHP Integration\n * Complete payment processing with subscriptions and webhooks\n */\n\nrequire_once 'vendor/autoload.php';\n\nuse Stripe\\Stripe;\nuse Stripe\\PaymentIntent;\nuse Stripe\\Customer;\nuse Stripe\\Subscription;\nuse Stripe\\Webhook;\n\nclass StripePayments {\n    private $secretKey;\n    \n    public function __construct($secretKey) {\n        $this->secretKey = $secretKey;\n        Stripe::setApiKey($secretKey);\n    }\n    \n    public function createPaymentIntent($amount, $currency = 'usd', $customerId = null) {\n        try {\n            $params = [\n                'amount' => $amount * 100, // Convert to cents\n                'currency' => $currency,\n                'automatic_payment_methods' => ['enabled' => true]\n            ];\n            \n            if ($customerId) {\n                $params['customer'] = $customerId;\n            }\n            \n            $paymentIntent = PaymentIntent::create($params);\n            \n            return [\n                'success' => true,\n                'client_secret' => $paymentIntent->client_secret,\n                'payment_intent_id' => $paymentIntent->id\n            ];\n            \n        } catch (\\Stripe\\Exception\\ApiErrorException $e) {\n            return [\n                'success' => false,\n                'error' => $e->getMessage()\n            ];\n        }\n    }\n    \n    public function createCustomer($email, $name) {\n        try {\n            $customer = Customer::create([\n                'email' => $email,\n                'name' => $name\n            ]);\n            \n            return [\n                'success' => true,\n                'customer_id' => $customer->id\n            ];\n            \n        } catch (\\Stripe\\Exception\\ApiErrorException $e) {\n            return [\n                'success' => false,\n                'error' => $e->getMessage()\n            ];\n        }\n    }\n    \n    public function createSubscription($customerId, $priceId) {\n        try {\n            $subscription = Subscription::create([\n                'customer' => $customerId,\n                'items' => [['price' => $priceId]],\n                'payment_behavior' => 'default_incomplete',\n                'payment_settings' => ['save_default_payment_method' => 'on_subscription'],\n                'expand' => ['latest_invoice.payment_intent']\n            ]);\n            \n            return [\n                'success' => true,\n                'subscription_id' => $subscription->id,\n                'client_secret' => $subscription->latest_invoice->payment_intent->client_secret\n            ];\n            \n        } catch (\\Stripe\\Exception\\ApiErrorException $e) {\n            return [\n                'success' => false,\n                'error' => $e->getMessage()\n            ];\n        }\n    }\n    \n    public function handleWebhook($payload, $sigHeader, $webhookSecret) {\n        try {\n            $event = Webhook::constructEvent($payload, $sigHeader, $webhookSecret);\n            \n            switch ($event->type) {\n                case 'payment_intent.succeeded':\n                    $paymentIntent = $event->data->object;\n                    error_log(\"Payment succeeded: \" . $paymentIntent->id);\n                    break;\n                    \n                case 'payment_intent.payment_failed':\n                    $paymentIntent = $event->data->object;\n                    error_log(\"Payment failed: \" . $paymentIntent->id);\n                    break;\n                    \n                case 'customer.subscription.created':\n                    $subscription = $event->data->object;\n                    error_log(\"Subscription created: \" . $subscription->id);\n                    break;\n                    \n                case 'invoice.payment_succeeded':\n                    $invoice = $event->data->object;\n                    error_log(\"Invoice paid: \" . $invoice->id);\n                    break;\n                    \n                default:\n                    error_log(\"Unhandled event type: \" . $event->type);\n            }\n            \n            return ['success' => true];\n            \n        } catch (\\UnexpectedValueException $e) {\n            return ['success' => false, 'error' => 'Invalid payload'];\n        } catch (\\Stripe\\Exception\\SignatureVerificationException $e) {\n            return ['success' => false, 'error' => 'Invalid signature'];\n        }\n    }\n}\n\n// Usage example\ntry {\n    $stripe = new StripePayments('sk_test_your_key');\n    $result = $stripe->createPaymentIntent(29.99, 'usd');\n    \n    if ($result['success']) {\n        echo json_encode($result, JSON_PRETTY_PRINT);\n    } else {\n        echo \"Error: \" . $result['error'];\n    }\n} catch (Exception $e) {\n    echo \"Error: \" . $e->getMessage();\n}\n\n// For webhook handling (webhook.php)\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $payload = file_get_contents('php://input');\n    $sigHeader = $_SERVER['HTTP_STRIPE_SIGNATURE'] ?? '';\n    $webhookSecret = 'whsec_your_webhook_secret';\n    \n    $stripe = new StripePayments('sk_test_your_key');\n    $result = $stripe->handleWebhook($payload, $sigHeader, $webhookSecret);\n    \n    http_response_code($result['success'] ? 200 : 400);\n    echo json_encode($result);\n}\n?>`\n            },\n            go: {\n                vanilla: `package main\n\nimport (\n    \"encoding/json\"\n    \"fmt\"\n    \"io\"\n    \"log\"\n    \"net/http\"\n    \"os\"\n\n    \"github.com/stripe/stripe-go/v74\"\n    \"github.com/stripe/stripe-go/v74/customer\"\n    \"github.com/stripe/stripe-go/v74/paymentintent\"\n    \"github.com/stripe/stripe-go/v74/sub\"\n    \"github.com/stripe/stripe-go/v74/webhook\"\n)\n\ntype StripePayments struct {\n    SecretKey string\n}\n\ntype PaymentResult struct {\n    Success         bool   \\`json:\"success\"\\`\n    ClientSecret    string \\`json:\"client_secret,omitempty\"\\`\n    PaymentIntentID string \\`json:\"payment_intent_id,omitempty\"\\`\n    Error           string \\`json:\"error,omitempty\"\\`\n}\n\ntype CustomerResult struct {\n    Success    bool   \\`json:\"success\"\\`\n    CustomerID string \\`json:\"customer_id,omitempty\"\\`\n    Error      string \\`json:\"error,omitempty\"\\`\n}\n\nfunc NewStripePayments(secretKey string) *StripePayments {\n    stripe.Key = secretKey\n    return &StripePayments{\n        SecretKey: secretKey,\n    }\n}\n\nfunc (s *StripePayments) CreatePaymentIntent(amount int64, currency string, customerID *string) PaymentResult {\n    params := &stripe.PaymentIntentParams{\n        Amount:   stripe.Int64(amount * 100), // Convert to cents\n        Currency: stripe.String(currency),\n        AutomaticPaymentMethods: &stripe.PaymentIntentAutomaticPaymentMethodsParams{\n            Enabled: stripe.Bool(true),\n        },\n    }\n\n    if customerID != nil {\n        params.Customer = customerID\n    }\n\n    pi, err := paymentintent.New(params)\n    if err != nil {\n        return PaymentResult{\n            Success: false,\n            Error:   err.Error(),\n        }\n    }\n\n    return PaymentResult{\n        Success:         true,\n        ClientSecret:    pi.ClientSecret,\n        PaymentIntentID: pi.ID,\n    }\n}\n\nfunc (s *StripePayments) CreateCustomer(email, name string) CustomerResult {\n    params := &stripe.CustomerParams{\n        Email: stripe.String(email),\n        Name:  stripe.String(name),\n    }\n\n    c, err := customer.New(params)\n    if err != nil {\n        return CustomerResult{\n            Success: false,\n            Error:   err.Error(),\n        }\n    }\n\n    return CustomerResult{\n        Success:    true,\n        CustomerID: c.ID,\n    }\n}\n\nfunc (s *StripePayments) CreateSubscription(customerID, priceID string) (map[string]interface{}, error) {\n    params := &stripe.SubscriptionParams{\n        Customer: stripe.String(customerID),\n        Items: []*stripe.SubscriptionItemsParams{\n            {\n                Price: stripe.String(priceID),\n            },\n        },\n        PaymentBehavior: stripe.String(\"default_incomplete\"),\n        PaymentSettings: &stripe.SubscriptionPaymentSettingsParams{\n            SaveDefaultPaymentMethod: stripe.String(\"on_subscription\"),\n        },\n    }\n    params.AddExpand(\"latest_invoice.payment_intent\")\n\n    sub, err := sub.New(params)\n    if err != nil {\n        return map[string]interface{}{\n            \"success\": false,\n            \"error\":   err.Error(),\n        }, err\n    }\n\n    return map[string]interface{}{\n        \"success\":         true,\n        \"subscription_id\": sub.ID,\n        \"client_secret\":   sub.LatestInvoice.PaymentIntent.ClientSecret,\n    }, nil\n}\n\nfunc (s *StripePayments) HandleWebhook(body []byte, signature, webhookSecret string) (map[string]interface{}, error) {\n    event, err := webhook.ConstructEvent(body, signature, webhookSecret)\n    if err != nil {\n        return map[string]interface{}{\n            \"success\": false,\n            \"error\":   \"Invalid signature\",\n        }, err\n    }\n\n    switch event.Type {\n    case \"payment_intent.succeeded\":\n        var paymentIntent stripe.PaymentIntent\n        if err := json.Unmarshal(event.Data.Raw, &paymentIntent); err != nil {\n            log.Printf(\"Error parsing webhook JSON: %v\", err)\n        } else {\n            log.Printf(\"Payment succeeded: %s\", paymentIntent.ID)\n        }\n\n    case \"payment_intent.payment_failed\":\n        var paymentIntent stripe.PaymentIntent\n        if err := json.Unmarshal(event.Data.Raw, &paymentIntent); err != nil {\n            log.Printf(\"Error parsing webhook JSON: %v\", err)\n        } else {\n            log.Printf(\"Payment failed: %s\", paymentIntent.ID)\n        }\n\n    case \"customer.subscription.created\":\n        var subscription stripe.Subscription\n        if err := json.Unmarshal(event.Data.Raw, &subscription); err != nil {\n            log.Printf(\"Error parsing webhook JSON: %v\", err)\n        } else {\n            log.Printf(\"Subscription created: %s\", subscription.ID)\n        }\n\n    default:\n        log.Printf(\"Unhandled event type: %s\", event.Type)\n    }\n\n    return map[string]interface{}{\"success\": true}, nil\n}\n\n// HTTP handlers\nfunc createPaymentIntentHandler(w http.ResponseWriter, r *http.Request) {\n    stripe := NewStripePayments(\"sk_test_your_key\")\n\n    var req struct {\n        Amount   int64  \\`json:\"amount\"\\`\n        Currency string \\`json:\"currency\"\\`\n    }\n\n    if err := json.NewDecoder(r.Body).Decode(&req); err != nil {\n        http.Error(w, err.Error(), http.StatusBadRequest)\n        return\n    }\n\n    result := stripe.CreatePaymentIntent(req.Amount, req.Currency, nil)\n    \n    w.Header().Set(\"Content-Type\", \"application/json\")\n    json.NewEncoder(w).Encode(result)\n}\n\nfunc webhookHandler(w http.ResponseWriter, r *http.Request) {\n    stripe := NewStripePayments(\"sk_test_your_key\")\n    \n    body, err := io.ReadAll(r.Body)\n    if err != nil {\n        http.Error(w, err.Error(), http.StatusBadRequest)\n        return\n    }\n\n    signature := r.Header.Get(\"Stripe-Signature\")\n    webhookSecret := \"whsec_your_webhook_secret\"\n\n    result, err := stripe.HandleWebhook(body, signature, webhookSecret)\n    if err != nil {\n        http.Error(w, err.Error(), http.StatusBadRequest)\n        return\n    }\n\n    w.Header().Set(\"Content-Type\", \"application/json\")\n    json.NewEncoder(w).Encode(result)\n}\n\nfunc main() {\n    // Example usage\n    stripe := NewStripePayments(\"sk_test_your_key\")\n    \n    result := stripe.CreatePaymentIntent(2999, \"usd\", nil) // $29.99\n    if result.Success {\n        fmt.Printf(\"Payment Intent created: %s\\\\n\", result.PaymentIntentID)\n    } else {\n        fmt.Printf(\"Error: %s\\\\n\", result.Error)\n    }\n\n    // HTTP server setup\n    http.HandleFunc(\"/create-payment-intent\", createPaymentIntentHandler)\n    http.HandleFunc(\"/webhook\", webhookHandler)\n    \n    fmt.Println(\"Server starting on :8080\")\n    log.Fatal(http.ListenAndServe(\":8080\", nil))\n}\n\n// Add to go.mod:\n// module stripe-integration\n// go 1.19\n// require github.com/stripe/stripe-go/v74 v74.30.0`\n            },\n            rust: {\n                vanilla: `use serde::{Deserialize, Serialize};\nuse std::collections::HashMap;\n\n#[derive(Debug, Serialize, Deserialize)]\npub struct PaymentIntentRequest {\n    pub amount: i64,\n    pub currency: String,\n    pub customer_id: Option<String>,\n}\n\n#[derive(Debug, Serialize, Deserialize)]\npub struct PaymentIntentResponse {\n    pub success: bool,\n    pub client_secret: Option<String>,\n    pub payment_intent_id: Option<String>,\n    pub error: Option<String>,\n}\n\n#[derive(Debug, Serialize, Deserialize)]\npub struct CustomerRequest {\n    pub email: String,\n    pub name: String,\n}\n\n#[derive(Debug, Serialize, Deserialize)]\npub struct CustomerResponse {\n    pub success: bool,\n    pub customer_id: Option<String>,\n    pub error: Option<String>,\n}\n\npub struct StripePayments {\n    secret_key: String,\n    client: reqwest::Client,\n}\n\nimpl StripePayments {\n    pub fn new(secret_key: String) -> Self {\n        Self {\n            secret_key,\n            client: reqwest::Client::new(),\n        }\n    }\n\n    pub async fn create_payment_intent(\n        &self,\n        amount: i64,\n        currency: &str,\n        customer_id: Option<&str>,\n    ) -> Result<PaymentIntentResponse, Box<dyn std::error::Error>> {\n        let mut params = HashMap::new();\n        params.insert(\"amount\", (amount * 100).to_string()); // Convert to cents\n        params.insert(\"currency\", currency.to_string());\n        params.insert(\"automatic_payment_methods[enabled]\", \"true\".to_string());\n\n        if let Some(id) = customer_id {\n            params.insert(\"customer\", id.to_string());\n        }\n\n        let response = self\n            .client\n            .post(\"https://api.stripe.com/v1/payment_intents\")\n            .header(\"Authorization\", format!(\"Bearer {}\", self.secret_key))\n            .form(&params)\n            .send()\n            .await?;\n\n        if response.status().is_success() {\n            let json: serde_json::Value = response.json().await?;\n            Ok(PaymentIntentResponse {\n                success: true,\n                client_secret: json[\"client_secret\"].as_str().map(String::from),\n                payment_intent_id: json[\"id\"].as_str().map(String::from),\n                error: None,\n            })\n        } else {\n            let error_text = response.text().await?;\n            Ok(PaymentIntentResponse {\n                success: false,\n                client_secret: None,\n                payment_intent_id: None,\n                error: Some(error_text),\n            })\n        }\n    }\n\n    pub async fn create_customer(\n        &self,\n        email: &str,\n        name: &str,\n    ) -> Result<CustomerResponse, Box<dyn std::error::Error>> {\n        let mut params = HashMap::new();\n        params.insert(\"email\", email);\n        params.insert(\"name\", name);\n\n        let response = self\n            .client\n            .post(\"https://api.stripe.com/v1/customers\")\n            .header(\"Authorization\", format!(\"Bearer {}\", self.secret_key))\n            .form(&params)\n            .send()\n            .await?;\n\n        if response.status().is_success() {\n            let json: serde_json::Value = response.json().await?;\n            Ok(CustomerResponse {\n                success: true,\n                customer_id: json[\"id\"].as_str().map(String::from),\n                error: None,\n            })\n        } else {\n            let error_text = response.text().await?;\n            Ok(CustomerResponse {\n                success: false,\n                customer_id: None,\n                error: Some(error_text),\n            })\n        }\n    }\n\n    pub async fn create_subscription(\n        &self,\n        customer_id: &str,\n        price_id: &str,\n    ) -> Result<serde_json::Value, Box<dyn std::error::Error>> {\n        let mut params = HashMap::new();\n        params.insert(\"customer\", customer_id);\n        params.insert(\"items[0][price]\", price_id);\n        params.insert(\"payment_behavior\", \"default_incomplete\");\n        params.insert(\"payment_settings[save_default_payment_method]\", \"on_subscription\");\n        params.insert(\"expand[]\", \"latest_invoice.payment_intent\");\n\n        let response = self\n            .client\n            .post(\"https://api.stripe.com/v1/subscriptions\")\n            .header(\"Authorization\", format!(\"Bearer {}\", self.secret_key))\n            .form(&params)\n            .send()\n            .await?;\n\n        let json: serde_json::Value = response.json().await?;\n        Ok(json)\n    }\n\n    pub fn verify_webhook_signature(\n        &self,\n        payload: &str,\n        signature: &str,\n        webhook_secret: &str,\n    ) -> Result<serde_json::Value, Box<dyn std::error::Error>> {\n        // Note: In production, use the official Stripe crate for webhook verification\n        // This is a simplified example\n        let event: serde_json::Value = serde_json::from_str(payload)?;\n        \n        match event[\"type\"].as_str() {\n            Some(\"payment_intent.succeeded\") => {\n                println!(\"Payment succeeded: {:?}\", event[\"data\"][\"object\"][\"id\"]);\n            }\n            Some(\"payment_intent.payment_failed\") => {\n                println!(\"Payment failed: {:?}\", event[\"data\"][\"object\"][\"id\"]);\n            }\n            Some(\"customer.subscription.created\") => {\n                println!(\"Subscription created: {:?}\", event[\"data\"][\"object\"][\"id\"]);\n            }\n            Some(\"invoice.payment_succeeded\") => {\n                println!(\"Invoice paid: {:?}\", event[\"data\"][\"object\"][\"id\"]);\n            }\n            _ => {\n                println!(\"Unhandled event type: {:?}\", event[\"type\"]);\n            }\n        }\n\n        Ok(event)\n    }\n}\n\n#[tokio::main]\nasync fn main() -> Result<(), Box<dyn std::error::Error>> {\n    let stripe = StripePayments::new(\"sk_test_your_key\".to_string());\n\n    // Create a payment intent\n    let result = stripe\n        .create_payment_intent(2999, \"usd\", None) // $29.99\n        .await?;\n\n    if result.success {\n        println!(\"Payment Intent created: {:?}\", result.payment_intent_id);\n        println!(\"Client Secret: {:?}\", result.client_secret);\n    } else {\n        println!(\"Error: {:?}\", result.error);\n    }\n\n    // Create a customer\n    let customer_result = stripe\n        .create_customer(\"customer@example.com\", \"John Doe\")\n        .await?;\n\n    if customer_result.success {\n        println!(\"Customer created: {:?}\", customer_result.customer_id);\n    } else {\n        println!(\"Customer creation error: {:?}\", customer_result.error);\n    }\n\n    Ok(())\n}\n\n// Add to Cargo.toml:\n// [dependencies]\n// reqwest = { version = \"0.11\", features = [\"json\"] }\n// serde = { version = \"1.0\", features = [\"derive\"] }\n// serde_json = \"1.0\"\n// tokio = { version = \"1\", features = [\"full\"] }`\n            }\n        }\n    },\n    // PayPal API\n    {\n        id: \"paypal\",\n        slug: \"paypal\",\n        name: \"PayPal\",\n        category: \"Payment Processing\",\n        description: \"Integrate PayPal payments, subscriptions, and marketplace functionality with comprehensive APIs.\",\n        icon: \"\\uD83C\\uDD7F️\",\n        features: [\n            \"PayPal Checkout\",\n            \"Express Checkout\",\n            \"Subscription Billing\",\n            \"Marketplace Payments\",\n            \"Dispute Management\",\n            \"Transaction Search\"\n        ],\n        popularity: 92,\n        documentation: \"https://developer.paypal.com/docs/\",\n        codeTemplates: {\n            javascript: {\n                vanilla: `// PayPal Payment Integration\nconst paypal = require('@paypal/checkout-server-sdk');\n\nclass PayPalPayments {\n  constructor(clientId, clientSecret, environment = 'sandbox') {\n    this.clientId = clientId;\n    this.clientSecret = clientSecret;\n    \n    // Set up PayPal environment\n    const Environment = environment === 'sandbox' \n      ? paypal.core.SandboxEnvironment \n      : paypal.core.LiveEnvironment;\n    \n    this.paypalClient = new paypal.core.PayPalHttpClient(\n      new Environment(clientId, clientSecret)\n    );\n  }\n\n  async createOrder(amount, currency = 'USD') {\n    try {\n      const request = new paypal.orders.OrdersCreateRequest();\n      request.prefer('return=representation');\n      request.requestBody({\n        intent: 'CAPTURE',\n        purchase_units: [{\n          amount: {\n            currency_code: currency,\n            value: amount.toFixed(2)\n          }\n        }]\n      });\n\n      const order = await this.paypalClient.execute(request);\n      \n      return {\n        success: true,\n        orderId: order.result.id,\n        approvalUrl: order.result.links.find(link => link.rel === 'approve').href\n      };\n    } catch (error) {\n      console.error('PayPal Order Creation Error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  async captureOrder(orderId) {\n    try {\n      const request = new paypal.orders.OrdersCaptureRequest(orderId);\n      request.requestBody({});\n\n      const capture = await this.paypalClient.execute(request);\n      \n      return {\n        success: true,\n        captureId: capture.result.purchase_units[0].payments.captures[0].id,\n        status: capture.result.status\n      };\n    } catch (error) {\n      console.error('PayPal Capture Error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  async createSubscription(planId) {\n    try {\n      const request = new paypal.subscriptions.SubscriptionsCreateRequest();\n      request.requestBody({\n        plan_id: planId,\n        start_time: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(), // Start tomorrow\n        subscriber: {\n          name: {\n            given_name: 'John',\n            surname: 'Doe'\n          },\n          email_address: 'customer@example.com'\n        }\n      });\n\n      const subscription = await this.paypalClient.execute(request);\n      \n      return {\n        success: true,\n        subscriptionId: subscription.result.id,\n        approvalUrl: subscription.result.links.find(link => link.rel === 'approve').href\n      };\n    } catch (error) {\n      console.error('PayPal Subscription Error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  async verifyWebhook(headers, body, webhookId) {\n    try {\n      const request = new paypal.notifications.VerifyWebhookSignatureRequest();\n      request.requestBody({\n        transmission_id: headers['paypal-transmission-id'],\n        cert_id: headers['paypal-cert-id'],\n        auth_algo: headers['paypal-auth-algo'],\n        transmission_sig: headers['paypal-transmission-sig'],\n        transmission_time: headers['paypal-transmission-time'],\n        webhook_id: webhookId,\n        webhook_event: JSON.parse(body)\n      });\n\n      const response = await this.paypalClient.execute(request);\n      \n      return {\n        success: true,\n        verified: response.result.verification_status === 'SUCCESS'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n}\n\n// Usage example\nconst payments = new PayPalPayments(\n  'your_client_id',\n  'your_client_secret',\n  'sandbox'\n);\n\npayments.createOrder(29.99, 'USD').then(console.log);`,\n                react: `// PayPal React Integration\nimport React, { useState } from 'react';\nimport { PayPalScriptProvider, PayPalButtons } from '@paypal/react-paypal-js';\n\nconst PayPalCheckout = ({ amount = 29.99, currency = 'USD', onSuccess, onError }) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const createOrder = (data, actions) => {\n    return actions.order.create({\n      purchase_units: [{\n        amount: {\n          value: amount.toFixed(2),\n          currency_code: currency\n        },\n        description: 'Your Product Description'\n      }]\n    });\n  };\n\n  const onApprove = async (data, actions) => {\n    setLoading(true);\n    try {\n      const order = await actions.order.capture();\n      console.log('Order captured:', order);\n      \n      if (onSuccess) {\n        onSuccess(order);\n      }\n    } catch (error) {\n      console.error('PayPal capture error:', error);\n      setError('Payment capture failed');\n      if (onError) {\n        onError(error);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onErrorHandler = (error) => {\n    console.error('PayPal error:', error);\n    setError('Payment failed');\n    if (onError) {\n      onError(error);\n    }\n  };\n\n  const onCancel = (data) => {\n    console.log('Payment cancelled:', data);\n    setError('Payment was cancelled');\n  };\n\n  if (error) {\n    return (\n      <div className=\"error\">\n        <p>Payment Error: {error}</p>\n        <button onClick={() => setError(null)}>Try Again</button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"paypal-checkout\">\n      <PayPalButtons\n        createOrder={createOrder}\n        onApprove={onApprove}\n        onError={onErrorHandler}\n        onCancel={onCancel}\n        disabled={loading}\n        style={{\n          layout: 'vertical',\n          color: 'blue',\n          shape: 'rect',\n          label: 'paypal'\n        }}\n      />\n      {loading && <div className=\"loading\">Processing payment...</div>}\n    </div>\n  );\n};\n\nconst PayPalProvider = ({ children }) => {\n  const initialOptions = {\n    'client-id': 'your_paypal_client_id',\n    currency: 'USD',\n    intent: 'capture',\n    'enable-funding': 'venmo,paylater',\n    'disable-funding': 'card'\n  };\n\n  return (\n    <PayPalScriptProvider options={initialOptions}>\n      {children}\n    </PayPalScriptProvider>\n  );\n};\n\n// Usage Example\nexport const PayPalExample = () => {\n  const handleSuccess = (order) => {\n    console.log('Payment successful:', order);\n    // Handle successful payment\n  };\n\n  const handleError = (error) => {\n    console.error('Payment error:', error);\n    // Handle payment error\n  };\n\n  return (\n    <PayPalProvider>\n      <div className=\"checkout-container\">\n        <h2>Complete Your Purchase</h2>\n        <div className=\"amount\">Total: $29.99</div>\n        <PayPalCheckout\n          amount={29.99}\n          currency=\"USD\"\n          onSuccess={handleSuccess}\n          onError={handleError}\n        />\n      </div>\n    </PayPalProvider>\n  );\n};`\n            }\n        }\n    },\n    // AUTHENTICATION APIS\n    {\n        id: \"auth0\",\n        slug: \"auth0\",\n        name: \"Auth0\",\n        category: \"Authentication\",\n        description: \"Universal authentication and authorization platform with social logins, SSO, and MFA.\",\n        icon: \"\\uD83D\\uDD10\",\n        features: [\n            \"Universal Login\",\n            \"Social Connections\",\n            \"Multi-factor Authentication\",\n            \"Single Sign-On (SSO)\",\n            \"User Management\",\n            \"Rules & Hooks\"\n        ],\n        popularity: 95,\n        documentation: \"https://auth0.com/docs\",\n        codeTemplates: {\n            javascript: {\n                vanilla: `// Auth0 JavaScript Integration\nimport { Auth0Client } from '@auth0/auth0-js';\n\nclass Auth0Service {\n  constructor(domain, clientId) {\n    this.auth0 = new Auth0Client({\n      domain: domain,\n      clientId: clientId,\n      redirectUri: window.location.origin,\n      responseType: 'token id_token',\n      scope: 'openid profile email'\n    });\n    \n    this.handleAuthentication();\n  }\n\n  // Login with redirect\n  login() {\n    this.auth0.authorize();\n  }\n\n  // Login with popup\n  async loginWithPopup() {\n    try {\n      await this.auth0.popup.authorize({\n        responseType: 'token id_token'\n      });\n      \n      return this.getProfile();\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  }\n\n  // Handle authentication callback\n  handleAuthentication() {\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        this.setSession(authResult);\n      } else if (err) {\n        console.error('Authentication error:', err);\n      }\n    });\n  }\n\n  // Set session\n  setSession(authResult) {\n    const expiresAt = JSON.stringify(\n      authResult.expiresIn * 1000 + new Date().getTime()\n    );\n    \n    localStorage.setItem('access_token', authResult.accessToken);\n    localStorage.setItem('id_token', authResult.idToken);\n    localStorage.setItem('expires_at', expiresAt);\n    \n    // Trigger authentication state change\n    window.dispatchEvent(new CustomEvent('authStateChanged', {\n      detail: { authenticated: true }\n    }));\n  }\n\n  // Logout\n  logout() {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('expires_at');\n    \n    this.auth0.logout({\n      returnTo: window.location.origin\n    });\n  }\n\n  // Check if user is authenticated\n  isAuthenticated() {\n    const expiresAt = JSON.parse(localStorage.getItem('expires_at') || '0');\n    return new Date().getTime() < expiresAt;\n  }\n\n  // Get user profile\n  getProfile() {\n    return new Promise((resolve, reject) => {\n      const accessToken = localStorage.getItem('access_token');\n      \n      if (!accessToken) {\n        reject(new Error('No access token found'));\n        return;\n      }\n      \n      this.auth0.client.userInfo(accessToken, (err, profile) => {\n        if (profile) {\n          resolve(profile);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  }\n\n  // Renew session\n  renewSession() {\n    return new Promise((resolve, reject) => {\n      this.auth0.checkSession({}, (err, authResult) => {\n        if (authResult && authResult.accessToken && authResult.idToken) {\n          this.setSession(authResult);\n          resolve(authResult);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  }\n\n  // Get access token\n  getAccessToken() {\n    return localStorage.getItem('access_token');\n  }\n}\n\n// Usage\nconst auth = new Auth0Service(\n  'your-domain.auth0.com',\n  'your-client-id'\n);\n\n// Login button handler\ndocument.getElementById('loginBtn').addEventListener('click', () => {\n  auth.login();\n});\n\n// Logout button handler\ndocument.getElementById('logoutBtn').addEventListener('click', () => {\n  auth.logout();\n});\n\n// Check authentication state\nif (auth.isAuthenticated()) {\n  auth.getProfile().then(profile => {\n    console.log('User profile:', profile);\n  });\n}`,\n                react: `// Auth0 React Integration\nimport React, { useState, useEffect, useContext, createContext } from 'react';\nimport { Auth0Provider, useAuth0 } from '@auth0/auth0-react';\n\n// Auth0 Provider Component\nexport const Auth0ProviderWithHistory = ({ children }) => {\n  const domain = process.env.REACT_APP_AUTH0_DOMAIN;\n  const clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n  const redirectUri = window.location.origin;\n\n  return (\n    <Auth0Provider\n      domain={domain}\n      clientId={clientId}\n      redirectUri={redirectUri}\n      audience={\\`https://\\${domain}/api/v2/\\`}\n      scope=\"read:current_user update:current_user_metadata\"\n    >\n      {children}\n    </Auth0Provider>\n  );\n};\n\n// Login Button Component\nconst LoginButton = () => {\n  const { loginWithRedirect, isAuthenticated } = useAuth0();\n\n  if (isAuthenticated) {\n    return null;\n  }\n\n  return (\n    <button\n      onClick={() => loginWithRedirect()}\n      className=\"btn btn-primary\"\n    >\n      Log In\n    </button>\n  );\n};\n\n// Logout Button Component\nconst LogoutButton = () => {\n  const { logout, isAuthenticated } = useAuth0();\n\n  if (!isAuthenticated) {\n    return null;\n  }\n\n  return (\n    <button\n      onClick={() => logout({\n        returnTo: window.location.origin\n      })}\n      className=\"btn btn-secondary\"\n    >\n      Log Out\n    </button>\n  );\n};\n\n// Profile Component\nconst Profile = () => {\n  const { user, isAuthenticated, isLoading, getAccessTokenSilently } = useAuth0();\n  const [userMetadata, setUserMetadata] = useState(null);\n\n  useEffect(() => {\n    const getUserMetadata = async () => {\n      const domain = process.env.REACT_APP_AUTH0_DOMAIN;\n\n      try {\n        const accessToken = await getAccessTokenSilently({\n          audience: \\`https://\\${domain}/api/v2/\\`,\n          scope: \"read:current_user\",\n        });\n\n        const userDetailsByIdUrl = \\`https://\\${domain}/api/v2/users/\\${user.sub}\\`;\n\n        const metadataResponse = await fetch(userDetailsByIdUrl, {\n          headers: {\n            Authorization: \\`Bearer \\${accessToken}\\`,\n          },\n        });\n\n        const { user_metadata } = await metadataResponse.json();\n        setUserMetadata(user_metadata);\n      } catch (e) {\n        console.error('Error fetching user metadata:', e.message);\n      }\n    };\n\n    if (isAuthenticated && user?.sub) {\n      getUserMetadata();\n    }\n  }, [getAccessTokenSilently, user?.sub, isAuthenticated]);\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!isAuthenticated) {\n    return <div>Please log in to view your profile.</div>;\n  }\n\n  return (\n    <div className=\"profile\">\n      <div className=\"profile-header\">\n        <img\n          src={user.picture}\n          alt={user.name}\n          className=\"profile-avatar\"\n        />\n        <div>\n          <h2>{user.name}</h2>\n          <p>{user.email}</p>\n        </div>\n      </div>\n      \n      <div className=\"profile-details\">\n        <h3>Profile Information</h3>\n        <pre>{JSON.stringify(user, null, 2)}</pre>\n        \n        {userMetadata && (\n          <>\n            <h3>User Metadata</h3>\n            <pre>{JSON.stringify(userMetadata, null, 2)}</pre>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\n// Protected Route Component\nconst ProtectedRoute = ({ children }) => {\n  const { isAuthenticated, isLoading } = useAuth0();\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!isAuthenticated) {\n    return (\n      <div className=\"unauthorized\">\n        <h2>Access Denied</h2>\n        <p>Please log in to access this page.</p>\n        <LoginButton />\n      </div>\n    );\n  }\n\n  return children;\n};\n\n// API Hook for authenticated requests\nconst useApi = () => {\n  const { getAccessTokenSilently } = useAuth0();\n\n  const makeAuthenticatedRequest = async (url, options = {}) => {\n    try {\n      const token = await getAccessTokenSilently();\n      \n      const response = await fetch(url, {\n        ...options,\n        headers: {\n          ...options.headers,\n          Authorization: \\`Bearer \\${token}\\`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(\\`HTTP error! status: \\${response.status}\\`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('API request error:', error);\n      throw error;\n    }\n  };\n\n  return { makeAuthenticatedRequest };\n};\n\n// Main App Component\nconst App = () => {\n  const { isAuthenticated, isLoading } = useAuth0();\n\n  if (isLoading) {\n    return <div className=\"loading\">Loading...</div>;\n  }\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h1>Auth0 React Example</h1>\n        <div className=\"auth-buttons\">\n          <LoginButton />\n          <LogoutButton />\n        </div>\n      </header>\n\n      <main>\n        {isAuthenticated ? (\n          <ProtectedRoute>\n            <Profile />\n          </ProtectedRoute>\n        ) : (\n          <div className=\"welcome\">\n            <h2>Welcome!</h2>\n            <p>Please log in to continue.</p>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\n// Root component with Auth0 Provider\nexport default function AppWithAuth0() {\n  return (\n    <Auth0ProviderWithHistory>\n      <App />\n    </Auth0ProviderWithHistory>\n  );\n}\n\n// Environment variables needed (.env):\n// REACT_APP_AUTH0_DOMAIN=your-domain.auth0.com\n// REACT_APP_AUTH0_CLIENT_ID=your-client-id`\n            }\n        }\n    },\n    // Google OAuth API\n    {\n        id: \"google-oauth\",\n        slug: \"google-oauth\",\n        name: \"Google OAuth\",\n        category: \"Authentication\",\n        description: \"Secure authentication with Google accounts using OAuth 2.0 protocol.\",\n        icon: \"\\uD83D\\uDD0D\",\n        features: [\n            \"OAuth 2.0 Flow\",\n            \"Google Sign-In\",\n            \"Profile Information\",\n            \"Refresh Tokens\",\n            \"Scope Management\",\n            \"Server-side Auth\"\n        ],\n        popularity: 88,\n        documentation: \"https://developers.google.com/identity/protocols/oauth2\",\n        codeTemplates: {\n            javascript: {\n                vanilla: `// Google OAuth 2.0 Integration\nclass GoogleAuth {\n  constructor(clientId, redirectUri) {\n    this.clientId = clientId;\n    this.redirectUri = redirectUri;\n    this.scope = 'openid profile email';\n    this.responseType = 'code';\n  }\n\n  // Generate OAuth URL\n  getAuthUrl() {\n    const params = new URLSearchParams({\n      client_id: this.clientId,\n      redirect_uri: this.redirectUri,\n      scope: this.scope,\n      response_type: this.responseType,\n      state: this.generateState(),\n      access_type: 'offline',\n      prompt: 'consent'\n    });\n\n    return \\`https://accounts.google.com/o/oauth2/v2/auth?\\${params}\\`;\n  }\n\n  // Generate state parameter for CSRF protection\n  generateState() {\n    const state = Math.random().toString(36).substring(2, 15) + \n                  Math.random().toString(36).substring(2, 15);\n    sessionStorage.setItem('google_oauth_state', state);\n    return state;\n  }\n\n  // Verify state parameter\n  verifyState(receivedState) {\n    const storedState = sessionStorage.getItem('google_oauth_state');\n    sessionStorage.removeItem('google_oauth_state');\n    return storedState === receivedState;\n  }\n\n  // Exchange authorization code for tokens\n  async exchangeCodeForTokens(code, clientSecret) {\n    try {\n      const response = await fetch('https://oauth2.googleapis.com/token', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: new URLSearchParams({\n          client_id: this.clientId,\n          client_secret: clientSecret,\n          code: code,\n          grant_type: 'authorization_code',\n          redirect_uri: this.redirectUri\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(\\`Token exchange failed: \\${response.status}\\`);\n      }\n\n      const tokens = await response.json();\n      \n      // Store tokens securely\n      this.storeTokens(tokens);\n      \n      return {\n        success: true,\n        tokens: tokens\n      };\n    } catch (error) {\n      console.error('Token exchange error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  // Store tokens securely\n  storeTokens(tokens) {\n    localStorage.setItem('google_access_token', tokens.access_token);\n    localStorage.setItem('google_refresh_token', tokens.refresh_token);\n    \n    if (tokens.expires_in) {\n      const expiresAt = Date.now() + (tokens.expires_in * 1000);\n      localStorage.setItem('google_token_expires_at', expiresAt.toString());\n    }\n  }\n\n  // Get user profile\n  async getUserProfile(accessToken = null) {\n    try {\n      const token = accessToken || localStorage.getItem('google_access_token');\n      \n      if (!token) {\n        throw new Error('No access token available');\n      }\n\n      const response = await fetch('https://www.googleapis.com/oauth2/v2/userinfo', {\n        headers: {\n          'Authorization': \\`Bearer \\${token}\\`\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(\\`Profile fetch failed: \\${response.status}\\`);\n      }\n\n      const profile = await response.json();\n      \n      return {\n        success: true,\n        profile: profile\n      };\n    } catch (error) {\n      console.error('Profile fetch error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  // Refresh access token\n  async refreshAccessToken(clientSecret) {\n    try {\n      const refreshToken = localStorage.getItem('google_refresh_token');\n      \n      if (!refreshToken) {\n        throw new Error('No refresh token available');\n      }\n\n      const response = await fetch('https://oauth2.googleapis.com/token', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: new URLSearchParams({\n          client_id: this.clientId,\n          client_secret: clientSecret,\n          refresh_token: refreshToken,\n          grant_type: 'refresh_token'\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(\\`Token refresh failed: \\${response.status}\\`);\n      }\n\n      const tokens = await response.json();\n      \n      // Update stored access token\n      localStorage.setItem('google_access_token', tokens.access_token);\n      \n      if (tokens.expires_in) {\n        const expiresAt = Date.now() + (tokens.expires_in * 1000);\n        localStorage.setItem('google_token_expires_at', expiresAt.toString());\n      }\n      \n      return {\n        success: true,\n        accessToken: tokens.access_token\n      };\n    } catch (error) {\n      console.error('Token refresh error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  // Check if token is expired\n  isTokenExpired() {\n    const expiresAt = localStorage.getItem('google_token_expires_at');\n    if (!expiresAt) return true;\n    \n    return Date.now() >= parseInt(expiresAt);\n  }\n\n  // Logout\n  logout() {\n    localStorage.removeItem('google_access_token');\n    localStorage.removeItem('google_refresh_token');\n    localStorage.removeItem('google_token_expires_at');\n  }\n\n  // Handle callback\n  handleCallback() {\n    const urlParams = new URLSearchParams(window.location.search);\n    const code = urlParams.get('code');\n    const state = urlParams.get('state');\n    const error = urlParams.get('error');\n\n    if (error) {\n      console.error('OAuth error:', error);\n      return { success: false, error: error };\n    }\n\n    if (!code || !state) {\n      return { success: false, error: 'Missing code or state parameter' };\n    }\n\n    if (!this.verifyState(state)) {\n      return { success: false, error: 'Invalid state parameter' };\n    }\n\n    return { success: true, code: code };\n  }\n}\n\n// Usage example\nconst googleAuth = new GoogleAuth(\n  'your-client-id.googleusercontent.com',\n  'http://localhost:3000/callback'\n);\n\n// Login button handler\ndocument.getElementById('loginBtn').addEventListener('click', () => {\n  const authUrl = googleAuth.getAuthUrl();\n  window.location.href = authUrl;\n});\n\n// Handle callback (on callback page)\nconst callbackResult = googleAuth.handleCallback();\nif (callbackResult.success) {\n  // Exchange code for tokens (requires client secret - do this on server)\n  console.log('Authorization code:', callbackResult.code);\n} else {\n  console.error('Callback error:', callbackResult.error);\n}\n\n// Get user profile\nif (!googleAuth.isTokenExpired()) {\n  googleAuth.getUserProfile().then(result => {\n    if (result.success) {\n      console.log('User profile:', result.profile);\n    }\n  });\n}`,\n                react: `// Google OAuth React Integration\nimport React, { useState, useEffect, createContext, useContext } from 'react';\n\n// Google Auth Context\nconst GoogleAuthContext = createContext();\n\nexport const useGoogleAuth = () => {\n  const context = useContext(GoogleAuthContext);\n  if (!context) {\n    throw new Error('useGoogleAuth must be used within GoogleAuthProvider');\n  }\n  return context;\n};\n\n// Google Auth Provider\nexport const GoogleAuthProvider = ({ children, clientId }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Load Google Identity Services\n    const script = document.createElement('script');\n    script.src = 'https://accounts.google.com/gsi/client';\n    script.async = true;\n    script.defer = true;\n    script.onload = initializeGoogleAuth;\n    document.head.appendChild(script);\n\n    return () => {\n      document.head.removeChild(script);\n    };\n  }, []);\n\n  const initializeGoogleAuth = () => {\n    if (window.google) {\n      window.google.accounts.id.initialize({\n        client_id: clientId,\n        callback: handleCredentialResponse,\n        auto_select: false,\n        cancel_on_tap_outside: true,\n      });\n      \n      // Check for existing session\n      checkExistingSession();\n    }\n    setLoading(false);\n  };\n\n  const handleCredentialResponse = async (response) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Decode JWT token\n      const userInfo = parseJwt(response.credential);\n      \n      // Store token\n      localStorage.setItem('google_id_token', response.credential);\n      \n      setUser({\n        id: userInfo.sub,\n        name: userInfo.name,\n        email: userInfo.email,\n        picture: userInfo.picture,\n        verified: userInfo.email_verified\n      });\n    } catch (error) {\n      console.error('Login error:', error);\n      setError('Login failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const parseJwt = (token) => {\n    try {\n      const base64Url = token.split('.')[1];\n      const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n      const jsonPayload = decodeURIComponent(\n        atob(base64)\n          .split('')\n          .map(c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2))\n          .join('')\n      );\n      return JSON.parse(jsonPayload);\n    } catch (error) {\n      throw new Error('Invalid token');\n    }\n  };\n\n  const checkExistingSession = () => {\n    const token = localStorage.getItem('google_id_token');\n    if (token) {\n      try {\n        const userInfo = parseJwt(token);\n        // Check if token is still valid (not expired)\n        if (userInfo.exp * 1000 > Date.now()) {\n          setUser({\n            id: userInfo.sub,\n            name: userInfo.name,\n            email: userInfo.email,\n            picture: userInfo.picture,\n            verified: userInfo.email_verified\n          });\n        } else {\n          localStorage.removeItem('google_id_token');\n        }\n      } catch (error) {\n        localStorage.removeItem('google_id_token');\n      }\n    }\n  };\n\n  const signIn = () => {\n    if (window.google) {\n      window.google.accounts.id.prompt();\n    }\n  };\n\n  const signInWithPopup = () => {\n    if (window.google) {\n      window.google.accounts.id.renderButton(\n        document.getElementById('google-signin-button'),\n        {\n          type: 'standard',\n          size: 'large',\n          text: 'signin_with',\n          theme: 'outline',\n          logo_alignment: 'left',\n          width: 250\n        }\n      );\n    }\n  };\n\n  const signOut = () => {\n    if (window.google) {\n      window.google.accounts.id.disableAutoSelect();\n    }\n    localStorage.removeItem('google_id_token');\n    setUser(null);\n  };\n\n  const value = {\n    user,\n    loading,\n    error,\n    signIn,\n    signInWithPopup,\n    signOut,\n    isAuthenticated: !!user\n  };\n\n  return (\n    <GoogleAuthContext.Provider value={value}>\n      {children}\n    </GoogleAuthContext.Provider>\n  );\n};\n\n// Login Button Component\nconst GoogleLoginButton = () => {\n  const { signIn, signInWithPopup, loading } = useGoogleAuth();\n  const [usePopup, setUsePopup] = useState(false);\n\n  useEffect(() => {\n    if (usePopup) {\n      signInWithPopup();\n    }\n  }, [usePopup, signInWithPopup]);\n\n  return (\n    <div className=\"google-login\">\n      <button\n        onClick={() => setUsePopup(true)}\n        disabled={loading}\n        className=\"google-login-button\"\n      >\n        {loading ? 'Loading...' : 'Sign in with Google'}\n      </button>\n      \n      <div id=\"google-signin-button\" style={{ marginTop: '10px' }}></div>\n      \n      <button\n        onClick={signIn}\n        disabled={loading}\n        className=\"google-login-prompt\"\n      >\n        Sign in (One Tap)\n      </button>\n    </div>\n  );\n};\n\n// Profile Component\nconst GoogleProfile = () => {\n  const { user, signOut } = useGoogleAuth();\n\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <div className=\"google-profile\">\n      <div className=\"profile-header\">\n        <img\n          src={user.picture}\n          alt={user.name}\n          className=\"profile-avatar\"\n          width={50}\n          height={50}\n        />\n        <div className=\"profile-info\">\n          <h3>{user.name}</h3>\n          <p>{user.email}</p>\n          {user.verified && <span className=\"verified\">✓ Verified</span>}\n        </div>\n      </div>\n      \n      <button onClick={signOut} className=\"sign-out-button\">\n        Sign Out\n      </button>\n    </div>\n  );\n};\n\n// Main App Component\nconst App = () => {\n  const { user, loading, error, isAuthenticated } = useGoogleAuth();\n\n  if (loading) {\n    return <div className=\"loading\">Loading Google Auth...</div>;\n  }\n\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>Google OAuth Example</h1>\n      </header>\n\n      <main>\n        {error && (\n          <div className=\"error-message\">\n            Error: {error}\n          </div>\n        )}\n\n        {isAuthenticated ? (\n          <div className=\"authenticated\">\n            <h2>Welcome!</h2>\n            <GoogleProfile />\n          </div>\n        ) : (\n          <div className=\"unauthenticated\">\n            <h2>Please sign in</h2>\n            <GoogleLoginButton />\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\n// Root Component\nexport default function AppWithGoogleAuth() {\n  return (\n    <GoogleAuthProvider clientId=\"your-client-id.googleusercontent.com\">\n      <App />\n    </GoogleAuthProvider>\n  );\n}\n\n// CSS styles (add to your stylesheet)\n/*\n.google-login-button,\n.google-login-prompt {\n  background: #4285f4;\n  color: white;\n  border: none;\n  padding: 12px 24px;\n  border-radius: 4px;\n  font-size: 14px;\n  cursor: pointer;\n  margin: 8px;\n}\n\n.google-login-button:hover {\n  background: #357ae8;\n}\n\n.profile-header {\n  display: flex;\n  align-items: center;\n  gap: 16px;\n}\n\n.profile-avatar {\n  border-radius: 50%;\n}\n\n.verified {\n  color: #34a853;\n  font-size: 12px;\n}\n\n.sign-out-button {\n  background: #ea4335;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n*/`\n            }\n        }\n    },\n    // CLOUD STORAGE APIS  \n    {\n        id: \"aws-s3\",\n        slug: \"aws-s3\",\n        name: \"AWS S3\",\n        category: \"Cloud Storage\",\n        description: \"Scalable object storage service with advanced security, management, and analytics capabilities.\",\n        icon: \"☁️\",\n        features: [\n            \"Object Upload/Download\",\n            \"Presigned URLs\",\n            \"Bucket Management\",\n            \"Access Control (IAM)\",\n            \"Server-side Encryption\",\n            \"Lifecycle Policies\"\n        ],\n        popularity: 96,\n        documentation: \"https://docs.aws.amazon.com/s3/\",\n        codeTemplates: {\n            javascript: {\n                vanilla: `// AWS S3 JavaScript Integration\nconst AWS = require('aws-sdk');\n\nclass S3Service {\n  constructor(accessKeyId, secretAccessKey, region = 'us-east-1') {\n    // Configure AWS\n    AWS.config.update({\n      accessKeyId: accessKeyId,\n      secretAccessKey: secretAccessKey,\n      region: region\n    });\n    \n    this.s3 = new AWS.S3();\n    this.region = region;\n  }\n\n  // Upload file to S3\n  async uploadFile(bucketName, key, fileData, options = {}) {\n    try {\n      const params = {\n        Bucket: bucketName,\n        Key: key,\n        Body: fileData,\n        ContentType: options.contentType || 'application/octet-stream',\n        ...options\n      };\n\n      const result = await this.s3.upload(params).promise();\n      \n      return {\n        success: true,\n        location: result.Location,\n        etag: result.ETag,\n        key: result.Key\n      };\n    } catch (error) {\n      console.error('S3 Upload Error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  // Download file from S3\n  async downloadFile(bucketName, key) {\n    try {\n      const params = {\n        Bucket: bucketName,\n        Key: key\n      };\n\n      const result = await this.s3.getObject(params).promise();\n      \n      return {\n        success: true,\n        data: result.Body,\n        contentType: result.ContentType,\n        lastModified: result.LastModified,\n        etag: result.ETag\n      };\n    } catch (error) {\n      console.error('S3 Download Error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  // Generate presigned URL for upload\n  getPresignedUploadUrl(bucketName, key, expiresIn = 300, contentType = null) {\n    try {\n      const params = {\n        Bucket: bucketName,\n        Key: key,\n        Expires: expiresIn\n      };\n\n      if (contentType) {\n        params.ContentType = contentType;\n      }\n\n      const url = this.s3.getSignedUrl('putObject', params);\n      \n      return {\n        success: true,\n        url: url,\n        expiresIn: expiresIn\n      };\n    } catch (error) {\n      console.error('Presigned URL Error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  // Generate presigned URL for download\n  getPresignedDownloadUrl(bucketName, key, expiresIn = 300) {\n    try {\n      const params = {\n        Bucket: bucketName,\n        Key: key,\n        Expires: expiresIn\n      };\n\n      const url = this.s3.getSignedUrl('getObject', params);\n      \n      return {\n        success: true,\n        url: url,\n        expiresIn: expiresIn\n      };\n    } catch (error) {\n      console.error('Presigned URL Error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  // List objects in bucket\n  async listObjects(bucketName, prefix = '', maxKeys = 1000) {\n    try {\n      const params = {\n        Bucket: bucketName,\n        Prefix: prefix,\n        MaxKeys: maxKeys\n      };\n\n      const result = await this.s3.listObjectsV2(params).promise();\n      \n      return {\n        success: true,\n        objects: result.Contents.map(obj => ({\n          key: obj.Key,\n          size: obj.Size,\n          lastModified: obj.LastModified,\n          etag: obj.ETag\n        })),\n        totalCount: result.KeyCount,\n        isTruncated: result.IsTruncated,\n        nextContinuationToken: result.NextContinuationToken\n      };\n    } catch (error) {\n      console.error('S3 List Error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  // Delete object from S3\n  async deleteFile(bucketName, key) {\n    try {\n      const params = {\n        Bucket: bucketName,\n        Key: key\n      };\n\n      await this.s3.deleteObject(params).promise();\n      \n      return {\n        success: true,\n        message: 'Object deleted successfully'\n      };\n    } catch (error) {\n      console.error('S3 Delete Error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  // Delete multiple objects\n  async deleteFiles(bucketName, keys) {\n    try {\n      const params = {\n        Bucket: bucketName,\n        Delete: {\n          Objects: keys.map(key => ({ Key: key })),\n          Quiet: false\n        }\n      };\n\n      const result = await this.s3.deleteObjects(params).promise();\n      \n      return {\n        success: true,\n        deleted: result.Deleted,\n        errors: result.Errors\n      };\n    } catch (error) {\n      console.error('S3 Bulk Delete Error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  // Copy object within S3\n  async copyFile(sourceBucket, sourceKey, destBucket, destKey) {\n    try {\n      const params = {\n        CopySource: \\`\\${sourceBucket}/\\${sourceKey}\\`,\n        Bucket: destBucket,\n        Key: destKey\n      };\n\n      const result = await this.s3.copyObject(params).promise();\n      \n      return {\n        success: true,\n        etag: result.ETag,\n        lastModified: result.LastModified\n      };\n    } catch (error) {\n      console.error('S3 Copy Error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  // Get object metadata\n  async getObjectMetadata(bucketName, key) {\n    try {\n      const params = {\n        Bucket: bucketName,\n        Key: key\n      };\n\n      const result = await this.s3.headObject(params).promise();\n      \n      return {\n        success: true,\n        metadata: {\n          contentType: result.ContentType,\n          contentLength: result.ContentLength,\n          lastModified: result.LastModified,\n          etag: result.ETag,\n          storageClass: result.StorageClass,\n          metadata: result.Metadata\n        }\n      };\n    } catch (error) {\n      console.error('S3 Metadata Error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  // Create multipart upload\n  async createMultipartUpload(bucketName, key, contentType) {\n    try {\n      const params = {\n        Bucket: bucketName,\n        Key: key,\n        ContentType: contentType\n      };\n\n      const result = await this.s3.createMultipartUpload(params).promise();\n      \n      return {\n        success: true,\n        uploadId: result.UploadId\n      };\n    } catch (error) {\n      console.error('Multipart Upload Creation Error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n}\n\n// Usage examples\nconst s3 = new S3Service(\n  'your-access-key-id',\n  'your-secret-access-key',\n  'us-east-1'\n);\n\n// Upload a file\nasync function uploadExample() {\n  const fileData = Buffer.from('Hello, S3!');\n  const result = await s3.uploadFile('my-bucket', 'hello.txt', fileData, {\n    contentType: 'text/plain'\n  });\n  \n  if (result.success) {\n    console.log('File uploaded:', result.location);\n  } else {\n    console.error('Upload failed:', result.error);\n  }\n}\n\n// Generate presigned URL\nasync function presignedUrlExample() {\n  const result = s3.getPresignedUploadUrl('my-bucket', 'upload.jpg', 300, 'image/jpeg');\n  \n  if (result.success) {\n    console.log('Presigned URL:', result.url);\n    // Use this URL to upload directly from browser\n  }\n}\n\n// List objects\nasync function listExample() {\n  const result = await s3.listObjects('my-bucket', 'uploads/');\n  \n  if (result.success) {\n    console.log('Objects:', result.objects);\n  }\n}\n\nuploadExample();`,\n                react: `// AWS S3 React Integration\nimport React, { useState, useCallback, useRef } from 'react';\nimport AWS from 'aws-sdk';\n\n// Configure AWS (do this at app level)\nAWS.config.update({\n  accessKeyId: process.env.REACT_APP_AWS_ACCESS_KEY_ID,\n  secretAccessKey: process.env.REACT_APP_AWS_SECRET_ACCESS_KEY,\n  region: process.env.REACT_APP_AWS_REGION\n});\n\nconst s3 = new AWS.S3();\n\n// Hook for S3 operations\nconst useS3 = (bucketName) => {\n  const [uploading, setUploading] = useState(false);\n  const [downloadUrl, setDownloadUrl] = useState('');\n  const [error, setError] = useState('');\n  const [progress, setProgress] = useState(0);\n\n  const uploadFile = useCallback(async (file, key, options = {}) => {\n    setUploading(true);\n    setError('');\n    setProgress(0);\n\n    try {\n      const params = {\n        Bucket: bucketName,\n        Key: key || file.name,\n        Body: file,\n        ContentType: file.type,\n        ...options\n      };\n\n      const upload = s3.upload(params);\n\n      // Track upload progress\n      upload.on('httpUploadProgress', (evt) => {\n        const progress = Math.round((evt.loaded / evt.total) * 100);\n        setProgress(progress);\n      });\n\n      const result = await upload.promise();\n      \n      return {\n        success: true,\n        location: result.Location,\n        key: result.Key,\n        etag: result.ETag\n      };\n    } catch (error) {\n      setError(error.message);\n      return { success: false, error: error.message };\n    } finally {\n      setUploading(false);\n    }\n  }, [bucketName]);\n\n  const downloadFile = useCallback(async (key) => {\n    try {\n      const params = {\n        Bucket: bucketName,\n        Key: key\n      };\n\n      const result = await s3.getObject(params).promise();\n      \n      // Create blob URL for download\n      const blob = new Blob([result.Body], { type: result.ContentType });\n      const url = URL.createObjectURL(blob);\n      setDownloadUrl(url);\n      \n      return { success: true, url, data: result.Body };\n    } catch (error) {\n      setError(error.message);\n      return { success: false, error: error.message };\n    }\n  }, [bucketName]);\n\n  const getPresignedUrl = useCallback((key, expiresIn = 300, operation = 'getObject') => {\n    try {\n      const params = {\n        Bucket: bucketName,\n        Key: key,\n        Expires: expiresIn\n      };\n\n      const url = s3.getSignedUrl(operation, params);\n      return { success: true, url };\n    } catch (error) {\n      setError(error.message);\n      return { success: false, error: error.message };\n    }\n  }, [bucketName]);\n\n  const listObjects = useCallback(async (prefix = '') => {\n    try {\n      const params = {\n        Bucket: bucketName,\n        Prefix: prefix\n      };\n\n      const result = await s3.listObjectsV2(params).promise();\n      \n      return {\n        success: true,\n        objects: result.Contents?.map(obj => ({\n          key: obj.Key,\n          size: obj.Size,\n          lastModified: obj.LastModified\n        })) || []\n      };\n    } catch (error) {\n      setError(error.message);\n      return { success: false, error: error.message };\n    }\n  }, [bucketName]);\n\n  const deleteFile = useCallback(async (key) => {\n    try {\n      const params = {\n        Bucket: bucketName,\n        Key: key\n      };\n\n      await s3.deleteObject(params).promise();\n      return { success: true };\n    } catch (error) {\n      setError(error.message);\n      return { success: false, error: error.message };\n    }\n  }, [bucketName]);\n\n  return {\n    uploadFile,\n    downloadFile,\n    getPresignedUrl,\n    listObjects,\n    deleteFile,\n    uploading,\n    downloadUrl,\n    error,\n    progress\n  };\n};\n\n// File Upload Component\nconst FileUploader = ({ bucketName, onUploadComplete }) => {\n  const { uploadFile, uploading, progress, error } = useS3(bucketName);\n  const [dragActive, setDragActive] = useState(false);\n  const fileInputRef = useRef(null);\n\n  const handleFileSelect = (files) => {\n    if (files && files.length > 0) {\n      uploadFiles(Array.from(files));\n    }\n  };\n\n  const uploadFiles = async (files) => {\n    for (const file of files) {\n      const result = await uploadFile(file);\n      if (result.success && onUploadComplete) {\n        onUploadComplete(result);\n      }\n    }\n  };\n\n  const handleDrag = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.type === 'dragenter' || e.type === 'dragover') {\n      setDragActive(true);\n    } else if (e.type === 'dragleave') {\n      setDragActive(false);\n    }\n  };\n\n  const handleDrop = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n    \n    if (e.dataTransfer.files) {\n      handleFileSelect(e.dataTransfer.files);\n    }\n  };\n\n  return (\n    <div className=\"file-uploader\">\n      <div\n        className={\\`upload-area \\${dragActive ? 'drag-active' : ''} \\${uploading ? 'uploading' : ''}\\`}\n        onDragEnter={handleDrag}\n        onDragLeave={handleDrag}\n        onDragOver={handleDrag}\n        onDrop={handleDrop}\n        onClick={() => fileInputRef.current?.click()}\n      >\n        <input\n          ref={fileInputRef}\n          type=\"file\"\n          multiple\n          onChange={(e) => handleFileSelect(e.target.files)}\n          style={{ display: 'none' }}\n        />\n        \n        {uploading ? (\n          <div className=\"upload-progress\">\n            <div className=\"progress-bar\">\n              <div \n                className=\"progress-fill\"\n                style={{ width: \\`\\${progress}%\\` }}\n              />\n            </div>\n            <p>Uploading... {progress}%</p>\n          </div>\n        ) : (\n          <div className=\"upload-prompt\">\n            <div className=\"upload-icon\">📁</div>\n            <p>Click or drag files here to upload</p>\n            <span className=\"upload-hint\">Supports all file types</span>\n          </div>\n        )}\n      </div>\n\n      {error && (\n        <div className=\"error-message\">\n          Error: {error}\n        </div>\n      )}\n    </div>\n  );\n};\n\n// File Browser Component\nconst FileBrowser = ({ bucketName }) => {\n  const { listObjects, deleteFile, getPresignedUrl } = useS3(bucketName);\n  const [objects, setObjects] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedPrefix, setSelectedPrefix] = useState('');\n\n  useEffect(() => {\n    loadObjects();\n  }, [selectedPrefix]);\n\n  const loadObjects = async () => {\n    setLoading(true);\n    const result = await listObjects(selectedPrefix);\n    if (result.success) {\n      setObjects(result.objects);\n    }\n    setLoading(false);\n  };\n\n  const handleDelete = async (key) => {\n    if (window.confirm(\\`Delete \\${key}?\\`)) {\n      const result = await deleteFile(key);\n      if (result.success) {\n        await loadObjects(); // Refresh list\n      }\n    }\n  };\n\n  const handleDownload = async (key) => {\n    const result = getPresignedUrl(key, 300);\n    if (result.success) {\n      window.open(result.url, '_blank');\n    }\n  };\n\n  const formatFileSize = (bytes) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  return (\n    <div className=\"file-browser\">\n      <div className=\"browser-header\">\n        <h3>Files in {bucketName}</h3>\n        <div className=\"prefix-input\">\n          <input\n            type=\"text\"\n            value={selectedPrefix}\n            onChange={(e) => setSelectedPrefix(e.target.value)}\n            placeholder=\"Filter by prefix...\"\n          />\n          <button onClick={loadObjects}>Refresh</button>\n        </div>\n      </div>\n\n      {loading ? (\n        <div className=\"loading\">Loading files...</div>\n      ) : (\n        <div className=\"file-list\">\n          {objects.length === 0 ? (\n            <div className=\"empty-state\">\n              No files found {selectedPrefix && \\`with prefix \"\\${selectedPrefix}\"\\`}\n            </div>\n          ) : (\n            <table className=\"files-table\">\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Size</th>\n                  <th>Modified</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {objects.map((object) => (\n                  <tr key={object.key}>\n                    <td className=\"file-name\">{object.key}</td>\n                    <td>{formatFileSize(object.size)}</td>\n                    <td>{new Date(object.lastModified).toLocaleDateString()}</td>\n                    <td className=\"file-actions\">\n                      <button onClick={() => handleDownload(object.key)}>\n                        Download\n                      </button>\n                      <button \n                        onClick={() => handleDelete(object.key)}\n                        className=\"delete-button\"\n                      >\n                        Delete\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Main S3 App Component\nconst S3App = () => {\n  const bucketName = process.env.REACT_APP_S3_BUCKET_NAME;\n  const [activeTab, setActiveTab] = useState('upload');\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n\n  const handleUploadComplete = (result) => {\n    setUploadedFiles(prev => [...prev, result]);\n    console.log('File uploaded:', result);\n  };\n\n  return (\n    <div className=\"s3-app\">\n      <header>\n        <h1>AWS S3 File Manager</h1>\n        <div className=\"bucket-info\">Bucket: {bucketName}</div>\n      </header>\n\n      <div className=\"tab-navigation\">\n        <button\n          className={activeTab === 'upload' ? 'active' : ''}\n          onClick={() => setActiveTab('upload')}\n        >\n          Upload Files\n        </button>\n        <button\n          className={activeTab === 'browse' ? 'active' : ''}\n          onClick={() => setActiveTab('browse')}\n        >\n          Browse Files\n        </button>\n      </div>\n\n      <div className=\"tab-content\">\n        {activeTab === 'upload' ? (\n          <div className=\"upload-tab\">\n            <FileUploader\n              bucketName={bucketName}\n              onUploadComplete={handleUploadComplete}\n            />\n            \n            {uploadedFiles.length > 0 && (\n              <div className=\"upload-results\">\n                <h3>Recently Uploaded</h3>\n                <ul>\n                  {uploadedFiles.map((file, index) => (\n                    <li key={index}>\n                      <strong>{file.key}</strong> - {file.location}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </div>\n        ) : (\n          <div className=\"browse-tab\">\n            <FileBrowser bucketName={bucketName} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default S3App;\n\n// Environment variables needed (.env):\n// REACT_APP_AWS_ACCESS_KEY_ID=your_access_key_id\n// REACT_APP_AWS_SECRET_ACCESS_KEY=your_secret_access_key\n// REACT_APP_AWS_REGION=us-east-1\n// REACT_APP_S3_BUCKET_NAME=your-bucket-name`\n            }\n        }\n    },\n    // AI/ML APIS\n    {\n        id: \"openai\",\n        slug: \"openai\",\n        name: \"OpenAI\",\n        category: \"AI/ML\",\n        description: \"Advanced AI capabilities including GPT models, embeddings, and image generation with DALL-E.\",\n        icon: \"\\uD83E\\uDD16\",\n        features: [\n            \"GPT-4 Chat Completions\",\n            \"Text Embeddings\",\n            \"DALL-E Image Generation\",\n            \"Whisper Speech-to-Text\",\n            \"Function Calling\",\n            \"Fine-tuning Support\"\n        ],\n        popularity: 99,\n        documentation: \"https://platform.openai.com/docs\",\n        codeTemplates: {\n            javascript: {\n                vanilla: `// OpenAI API Integration\nconst OpenAI = require('openai');\n\nclass OpenAIService {\n  constructor(apiKey) {\n    this.openai = new OpenAI({\n      apiKey: apiKey\n    });\n  }\n\n  // Generate text completion using GPT\n  async generateCompletion(prompt, options = {}) {\n    try {\n      const completion = await this.openai.chat.completions.create({\n        model: options.model || 'gpt-4',\n        messages: [\n          {\n            role: 'system',\n            content: options.systemMessage || 'You are a helpful assistant.'\n          },\n          {\n            role: 'user',\n            content: prompt\n          }\n        ],\n        max_tokens: options.maxTokens || 150,\n        temperature: options.temperature || 0.7,\n        top_p: options.topP || 1,\n        frequency_penalty: options.frequencyPenalty || 0,\n        presence_penalty: options.presencePenalty || 0\n      });\n\n      return {\n        success: true,\n        text: completion.choices[0].message.content,\n        usage: completion.usage,\n        model: completion.model\n      };\n    } catch (error) {\n      console.error('OpenAI Completion Error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  // Generate streaming completion\n  async generateStreamingCompletion(prompt, onChunk, options = {}) {\n    try {\n      const stream = await this.openai.chat.completions.create({\n        model: options.model || 'gpt-4',\n        messages: [\n          {\n            role: 'system',\n            content: options.systemMessage || 'You are a helpful assistant.'\n          },\n          {\n            role: 'user',\n            content: prompt\n          }\n        ],\n        max_tokens: options.maxTokens || 150,\n        temperature: options.temperature || 0.7,\n        stream: true\n      });\n\n      let fullText = '';\n      \n      for await (const chunk of stream) {\n        const content = chunk.choices[0]?.delta?.content || '';\n        fullText += content;\n        \n        if (onChunk) {\n          onChunk(content, fullText);\n        }\n      }\n\n      return {\n        success: true,\n        text: fullText\n      };\n    } catch (error) {\n      console.error('OpenAI Streaming Error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  // Generate text embeddings\n  async generateEmbeddings(texts, options = {}) {\n    try {\n      const textsArray = Array.isArray(texts) ? texts : [texts];\n      \n      const response = await this.openai.embeddings.create({\n        model: options.model || 'text-embedding-ada-002',\n        input: textsArray\n      });\n\n      return {\n        success: true,\n        embeddings: response.data.map(item => item.embedding),\n        usage: response.usage\n      };\n    } catch (error) {\n      console.error('OpenAI Embeddings Error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  // Generate images with DALL-E\n  async generateImage(prompt, options = {}) {\n    try {\n      const response = await this.openai.images.generate({\n        model: options.model || 'dall-e-3',\n        prompt: prompt,\n        n: options.n || 1,\n        size: options.size || '1024x1024',\n        quality: options.quality || 'standard',\n        style: options.style || 'vivid'\n      });\n\n      return {\n        success: true,\n        images: response.data.map(item => ({\n          url: item.url,\n          revised_prompt: item.revised_prompt\n        }))\n      };\n    } catch (error) {\n      console.error('OpenAI Image Generation Error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  // Transcribe audio with Whisper\n  async transcribeAudio(audioFile, options = {}) {\n    try {\n      const transcription = await this.openai.audio.transcriptions.create({\n        file: audioFile,\n        model: options.model || 'whisper-1',\n        language: options.language,\n        prompt: options.prompt,\n        response_format: options.responseFormat || 'json',\n        temperature: options.temperature || 0\n      });\n\n      return {\n        success: true,\n        text: transcription.text,\n        language: transcription.language\n      };\n    } catch (error) {\n      console.error('OpenAI Transcription Error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  // Generate speech from text\n  async generateSpeech(text, options = {}) {\n    try {\n      const mp3 = await this.openai.audio.speech.create({\n        model: options.model || 'tts-1',\n        voice: options.voice || 'alloy',\n        input: text,\n        response_format: options.responseFormat || 'mp3',\n        speed: options.speed || 1.0\n      });\n\n      const buffer = Buffer.from(await mp3.arrayBuffer());\n      \n      return {\n        success: true,\n        audio: buffer\n      };\n    } catch (error) {\n      console.error('OpenAI Speech Generation Error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  // Function calling with GPT\n  async callFunction(prompt, functions, options = {}) {\n    try {\n      const completion = await this.openai.chat.completions.create({\n        model: options.model || 'gpt-4',\n        messages: [\n          {\n            role: 'system',\n            content: options.systemMessage || 'You are a helpful assistant that can call functions.'\n          },\n          {\n            role: 'user',\n            content: prompt\n          }\n        ],\n        functions: functions,\n        function_call: options.functionCall || 'auto',\n        temperature: options.temperature || 0.1\n      });\n\n      const message = completion.choices[0].message;\n\n      if (message.function_call) {\n        return {\n          success: true,\n          functionCall: {\n            name: message.function_call.name,\n            arguments: JSON.parse(message.function_call.arguments)\n          },\n          message: message.content,\n          usage: completion.usage\n        };\n      }\n\n      return {\n        success: true,\n        message: message.content,\n        usage: completion.usage\n      };\n    } catch (error) {\n      console.error('OpenAI Function Call Error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  // Chat with conversation history\n  async chat(messages, options = {}) {\n    try {\n      const completion = await this.openai.chat.completions.create({\n        model: options.model || 'gpt-4',\n        messages: messages,\n        max_tokens: options.maxTokens || 150,\n        temperature: options.temperature || 0.7\n      });\n\n      const responseMessage = completion.choices[0].message;\n\n      return {\n        success: true,\n        message: responseMessage,\n        usage: completion.usage,\n        model: completion.model\n      };\n    } catch (error) {\n      console.error('OpenAI Chat Error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n}\n\n// Usage examples\nconst openai = new OpenAIService('your-openai-api-key');\n\n// Generate a completion\nasync function completionExample() {\n  const result = await openai.generateCompletion(\n    'Write a short story about a robot learning to paint.',\n    {\n      model: 'gpt-4',\n      maxTokens: 200,\n      temperature: 0.8\n    }\n  );\n\n  if (result.success) {\n    console.log('Generated text:', result.text);\n    console.log('Tokens used:', result.usage);\n  } else {\n    console.error('Error:', result.error);\n  }\n}\n\n// Generate embeddings\nasync function embeddingsExample() {\n  const texts = [\n    'The quick brown fox jumps over the lazy dog',\n    'Machine learning is a subset of artificial intelligence',\n    'JavaScript is a programming language'\n  ];\n\n  const result = await openai.generateEmbeddings(texts);\n\n  if (result.success) {\n    console.log('Embeddings generated:', result.embeddings.length);\n    console.log('First embedding dimension:', result.embeddings[0].length);\n  }\n}\n\n// Generate image\nasync function imageExample() {\n  const result = await openai.generateImage(\n    'A serene landscape with mountains and a lake at sunset',\n    {\n      size: '1024x1024',\n      quality: 'hd',\n      n: 1\n    }\n  );\n\n  if (result.success) {\n    console.log('Image URL:', result.images[0].url);\n  }\n}\n\n// Streaming completion\nasync function streamingExample() {\n  console.log('Streaming response:');\n  \n  const result = await openai.generateStreamingCompletion(\n    'Explain quantum computing in simple terms.',\n    (chunk, fullText) => {\n      process.stdout.write(chunk);\n    },\n    {\n      model: 'gpt-4',\n      maxTokens: 200\n    }\n  );\n\n  console.log('\\\\nStreaming complete:', result.success);\n}\n\n// Function calling example\nasync function functionCallExample() {\n  const functions = [\n    {\n      name: 'get_weather',\n      description: 'Get the current weather for a location',\n      parameters: {\n        type: 'object',\n        properties: {\n          location: {\n            type: 'string',\n            description: 'The city and state, e.g. San Francisco, CA'\n          }\n        },\n        required: ['location']\n      }\n    }\n  ];\n\n  const result = await openai.callFunction(\n    'What\\'s the weather like in New York?',\n    functions\n  );\n\n  if (result.success && result.functionCall) {\n    console.log('Function to call:', result.functionCall.name);\n    console.log('Arguments:', result.functionCall.arguments);\n  }\n}\n\ncompletionExample();`,\n                react: `// OpenAI React Integration\nimport React, { useState, useEffect, useRef } from 'react';\nimport OpenAI from 'openai';\n\n// OpenAI Hook\nconst useOpenAI = (apiKey) => {\n  const [client, setClient] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (apiKey) {\n      const openaiClient = new OpenAI({\n        apiKey: apiKey,\n        dangerouslyAllowBrowser: true // Only for demo - use server-side in production\n      });\n      setClient(openaiClient);\n    }\n  }, [apiKey]);\n\n  const generateCompletion = async (prompt, options = {}) => {\n    if (!client) throw new Error('OpenAI client not initialized');\n\n    setLoading(true);\n    setError('');\n\n    try {\n      const completion = await client.chat.completions.create({\n        model: options.model || 'gpt-3.5-turbo',\n        messages: [\n          {\n            role: 'system',\n            content: options.systemMessage || 'You are a helpful assistant.'\n          },\n          {\n            role: 'user',\n            content: prompt\n          }\n        ],\n        max_tokens: options.maxTokens || 150,\n        temperature: options.temperature || 0.7\n      });\n\n      return {\n        success: true,\n        text: completion.choices[0].message.content,\n        usage: completion.usage\n      };\n    } catch (error) {\n      setError(error.message);\n      return { success: false, error: error.message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const generateImage = async (prompt, options = {}) => {\n    if (!client) throw new Error('OpenAI client not initialized');\n\n    setLoading(true);\n    setError('');\n\n    try {\n      const response = await client.images.generate({\n        model: 'dall-e-2', // Use dall-e-2 for browser compatibility\n        prompt: prompt,\n        n: options.n || 1,\n        size: options.size || '512x512'\n      });\n\n      return {\n        success: true,\n        images: response.data.map(item => ({ url: item.url }))\n      };\n    } catch (error) {\n      setError(error.message);\n      return { success: false, error: error.message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return {\n    generateCompletion,\n    generateImage,\n    loading,\n    error,\n    isReady: !!client\n  };\n};\n\n// Chat Component\nconst ChatComponent = ({ apiKey }) => {\n  const { generateCompletion, loading, error } = useOpenAI(apiKey);\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    if (!input.trim() || loading) return;\n\n    const userMessage = { role: 'user', content: input };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n\n    const result = await generateCompletion(input, {\n      model: 'gpt-3.5-turbo',\n      maxTokens: 200,\n      temperature: 0.7\n    });\n\n    if (result.success) {\n      const assistantMessage = { role: 'assistant', content: result.text };\n      setMessages(prev => [...prev, assistantMessage]);\n    } else {\n      const errorMessage = { role: 'error', content: \\`Error: \\${result.error}\\` };\n      setMessages(prev => [...prev, errorMessage]);\n    }\n  };\n\n  return (\n    <div className=\"chat-component\">\n      <div className=\"chat-header\">\n        <h3>AI Chat Assistant</h3>\n        <span className=\"model-info\">GPT-3.5 Turbo</span>\n      </div>\n\n      <div className=\"chat-messages\">\n        {messages.length === 0 ? (\n          <div className=\"empty-state\">\n            <p>Start a conversation with the AI assistant!</p>\n          </div>\n        ) : (\n          messages.map((message, index) => (\n            <div key={index} className={\\`message message-\\${message.role}\\`}>\n              <div className=\"message-content\">\n                {message.content}\n              </div>\n              <div className=\"message-role\">{message.role}</div>\n            </div>\n          ))\n        )}\n        {loading && (\n          <div className=\"message message-assistant\">\n            <div className=\"message-content\">\n              <div className=\"typing-indicator\">\n                <span></span>\n                <span></span>\n                <span></span>\n              </div>\n            </div>\n          </div>\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n\n      <form onSubmit={sendMessage} className=\"chat-input\">\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Type your message...\"\n          disabled={loading}\n        />\n        <button type=\"submit\" disabled={loading || !input.trim()}>\n          Send\n        </button>\n      </form>\n\n      {error && (\n        <div className=\"error-message\">\n          {error}\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Image Generation Component\nconst ImageGenerator = ({ apiKey }) => {\n  const { generateImage, loading, error } = useOpenAI(apiKey);\n  const [prompt, setPrompt] = useState('');\n  const [generatedImages, setGeneratedImages] = useState([]);\n  const [imageSize, setImageSize] = useState('512x512');\n\n  const generateImages = async (e) => {\n    e.preventDefault();\n    if (!prompt.trim() || loading) return;\n\n    const result = await generateImage(prompt, {\n      size: imageSize,\n      n: 1\n    });\n\n    if (result.success) {\n      setGeneratedImages(prev => [...prev, {\n        prompt,\n        url: result.images[0].url,\n        timestamp: new Date()\n      }]);\n    }\n  };\n\n  return (\n    <div className=\"image-generator\">\n      <div className=\"generator-header\">\n        <h3>AI Image Generator</h3>\n        <span className=\"model-info\">DALL-E 2</span>\n      </div>\n\n      <form onSubmit={generateImages} className=\"generator-form\">\n        <div className=\"form-group\">\n          <textarea\n            value={prompt}\n            onChange={(e) => setPrompt(e.target.value)}\n            placeholder=\"Describe the image you want to generate...\"\n            rows={3}\n            disabled={loading}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Image Size:</label>\n          <select\n            value={imageSize}\n            onChange={(e) => setImageSize(e.target.value)}\n            disabled={loading}\n          >\n            <option value=\"256x256\">256x256</option>\n            <option value=\"512x512\">512x512</option>\n            <option value=\"1024x1024\">1024x1024</option>\n          </select>\n        </div>\n\n        <button type=\"submit\" disabled={loading || !prompt.trim()}>\n          {loading ? 'Generating...' : 'Generate Image'}\n        </button>\n      </form>\n\n      {error && (\n        <div className=\"error-message\">\n          {error}\n        </div>\n      )}\n\n      <div className=\"generated-images\">\n        {generatedImages.length === 0 ? (\n          <div className=\"empty-state\">\n            <p>Generated images will appear here</p>\n          </div>\n        ) : (\n          <div className=\"images-grid\">\n            {generatedImages.map((item, index) => (\n              <div key={index} className=\"image-card\">\n                <img src={item.url} alt={item.prompt} />\n                <div className=\"image-info\">\n                  <p className=\"image-prompt\">{item.prompt}</p>\n                  <p className=\"image-timestamp\">\n                    {item.timestamp.toLocaleTimeString()}\n                  </p>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\n// Text Completion Component\nconst TextCompletion = ({ apiKey }) => {\n  const { generateCompletion, loading, error } = useOpenAI(apiKey);\n  const [prompt, setPrompt] = useState('');\n  const [completion, setCompletion] = useState('');\n  const [model, setModel] = useState('gpt-3.5-turbo');\n  const [temperature, setTemperature] = useState(0.7);\n  const [maxTokens, setMaxTokens] = useState(150);\n\n  const generateText = async (e) => {\n    e.preventDefault();\n    if (!prompt.trim() || loading) return;\n\n    const result = await generateCompletion(prompt, {\n      model,\n      temperature,\n      maxTokens\n    });\n\n    if (result.success) {\n      setCompletion(result.text);\n    }\n  };\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(completion);\n  };\n\n  return (\n    <div className=\"text-completion\">\n      <div className=\"completion-header\">\n        <h3>Text Completion</h3>\n        <span className=\"model-info\">{model}</span>\n      </div>\n\n      <form onSubmit={generateText} className=\"completion-form\">\n        <div className=\"form-group\">\n          <label>Prompt:</label>\n          <textarea\n            value={prompt}\n            onChange={(e) => setPrompt(e.target.value)}\n            placeholder=\"Enter your prompt here...\"\n            rows={4}\n            disabled={loading}\n          />\n        </div>\n\n        <div className=\"form-row\">\n          <div className=\"form-group\">\n            <label>Model:</label>\n            <select\n              value={model}\n              onChange={(e) => setModel(e.target.value)}\n              disabled={loading}\n            >\n              <option value=\"gpt-3.5-turbo\">GPT-3.5 Turbo</option>\n              <option value=\"gpt-4\">GPT-4</option>\n            </select>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Temperature: {temperature}</label>\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"2\"\n              step=\"0.1\"\n              value={temperature}\n              onChange={(e) => setTemperature(parseFloat(e.target.value))}\n              disabled={loading}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Max Tokens:</label>\n            <input\n              type=\"number\"\n              min=\"1\"\n              max=\"4000\"\n              value={maxTokens}\n              onChange={(e) => setMaxTokens(parseInt(e.target.value))}\n              disabled={loading}\n            />\n          </div>\n        </div>\n\n        <button type=\"submit\" disabled={loading || !prompt.trim()}>\n          {loading ? 'Generating...' : 'Generate'}\n        </button>\n      </form>\n\n      {error && (\n        <div className=\"error-message\">\n          {error}\n        </div>\n      )}\n\n      {completion && (\n        <div className=\"completion-result\">\n          <div className=\"result-header\">\n            <h4>Generated Text:</h4>\n            <button onClick={copyToClipboard} className=\"copy-button\">\n              Copy\n            </button>\n          </div>\n          <div className=\"result-content\">\n            {completion}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Main OpenAI App\nconst OpenAIApp = () => {\n  const [apiKey, setApiKey] = useState(process.env.REACT_APP_OPENAI_API_KEY || '');\n  const [activeTab, setActiveTab] = useState('chat');\n\n  return (\n    <div className=\"openai-app\">\n      <header className=\"app-header\">\n        <h1>OpenAI Integration Demo</h1>\n        \n        {!process.env.REACT_APP_OPENAI_API_KEY && (\n          <div className=\"api-key-input\">\n            <input\n              type=\"password\"\n              placeholder=\"Enter OpenAI API Key\"\n              value={apiKey}\n              onChange={(e) => setApiKey(e.target.value)}\n            />\n          </div>\n        )}\n      </header>\n\n      <div className=\"tab-navigation\">\n        <button\n          className={activeTab === 'chat' ? 'active' : ''}\n          onClick={() => setActiveTab('chat')}\n        >\n          Chat\n        </button>\n        <button\n          className={activeTab === 'completion' ? 'active' : ''}\n          onClick={() => setActiveTab('completion')}\n        >\n          Text Completion\n        </button>\n        <button\n          className={activeTab === 'images' ? 'active' : ''}\n          onClick={() => setActiveTab('images')}\n        >\n          Image Generation\n        </button>\n      </div>\n\n      <div className=\"tab-content\">\n        {activeTab === 'chat' && <ChatComponent apiKey={apiKey} />}\n        {activeTab === 'completion' && <TextCompletion apiKey={apiKey} />}\n        {activeTab === 'images' && <ImageGenerator apiKey={apiKey} />}\n      </div>\n    </div>\n  );\n};\n\nexport default OpenAIApp;\n\n// Environment variables needed (.env):\n// REACT_APP_OPENAI_API_KEY=your_openai_api_key_here\n\n// Note: In production, API calls should be made from your backend\n// to keep the API key secure. This is for demonstration purposes.`\n            }\n        }\n    }\n];\nconst categories = [\n    {\n        id: \"payment\",\n        name: \"Payment Processing\",\n        description: \"Accept payments, manage subscriptions, and handle transactions securely.\",\n        count: 15,\n        popularAPIs: [\n            \"Stripe\",\n            \"PayPal\",\n            \"Square\"\n        ]\n    },\n    {\n        id: \"auth\",\n        name: \"Authentication\",\n        description: \"Secure user authentication, OAuth, and identity management.\",\n        count: 20,\n        popularAPIs: [\n            \"Auth0\",\n            \"Firebase Auth\",\n            \"Google OAuth\"\n        ]\n    },\n    {\n        id: \"storage\",\n        name: \"Cloud Storage\",\n        description: \"Store, manage, and deliver files and media content.\",\n        count: 12,\n        popularAPIs: [\n            \"AWS S3\",\n            \"Google Cloud\",\n            \"Cloudinary\"\n        ]\n    },\n    {\n        id: \"ai\",\n        name: \"AI/ML\",\n        description: \"Integrate artificial intelligence and machine learning capabilities.\",\n        count: 15,\n        popularAPIs: [\n            \"OpenAI\",\n            \"Anthropic\",\n            \"Hugging Face\"\n        ]\n    },\n    {\n        id: \"database\",\n        name: \"Database\",\n        description: \"Database services and data management solutions.\",\n        count: 10,\n        popularAPIs: [\n            \"Supabase\",\n            \"MongoDB\",\n            \"PlanetScale\"\n        ]\n    },\n    {\n        id: \"communication\",\n        name: \"Communication\",\n        description: \"Email, SMS, push notifications, and messaging services.\",\n        count: 12,\n        popularAPIs: [\n            \"Twilio\",\n            \"SendGrid\",\n            \"Pusher\"\n        ]\n    },\n    {\n        id: \"social\",\n        name: \"Social Media\",\n        description: \"Social platform integrations and social authentication.\",\n        count: 8,\n        popularAPIs: [\n            \"Twitter API\",\n            \"Facebook Graph\",\n            \"Instagram\"\n        ]\n    },\n    {\n        id: \"maps\",\n        name: \"Maps & Location\",\n        description: \"Mapping, geolocation, and location-based services.\",\n        count: 6,\n        popularAPIs: [\n            \"Google Maps\",\n            \"Mapbox\",\n            \"HERE Maps\"\n        ]\n    },\n    {\n        id: \"analytics\",\n        name: \"Analytics\",\n        description: \"Track user behavior, performance, and business metrics.\",\n        count: 8,\n        popularAPIs: [\n            \"Google Analytics\",\n            \"Mixpanel\",\n            \"Amplitude\"\n        ]\n    },\n    {\n        id: \"ecommerce\",\n        name: \"E-commerce\",\n        description: \"Shopping cart, inventory, and e-commerce functionality.\",\n        count: 10,\n        popularAPIs: [\n            \"Shopify\",\n            \"WooCommerce\",\n            \"BigCommerce\"\n        ]\n    },\n    {\n        id: \"productivity\",\n        name: \"Productivity\",\n        description: \"Document management, calendars, and workflow automation.\",\n        count: 9,\n        popularAPIs: [\n            \"Google Workspace\",\n            \"Microsoft 365\",\n            \"Notion\"\n        ]\n    },\n    {\n        id: \"media\",\n        name: \"Media Processing\",\n        description: \"Image, video, and audio processing and manipulation.\",\n        count: 7,\n        popularAPIs: [\n            \"Cloudinary\",\n            \"ImageKit\",\n            \"Mux\"\n        ]\n    }\n];\n// Helper functions\nfunction getAllAPIs() {\n    return apiTemplates;\n}\nfunction getAPIBySlug(slug) {\n    return apiTemplates.find((api)=>api.slug === slug) || null;\n}\nfunction getAPIsByCategory(category) {\n    if (category === \"all\") return apiTemplates;\n    return apiTemplates.filter((api)=>api.category.toLowerCase().includes(category.toLowerCase()));\n}\nfunction getCategories() {\n    return categories;\n}\nfunction getPopularAPIs() {\n    return apiTemplates.filter((api)=>api.popularity && api.popularity >= 90).sort((a, b)=>(b.popularity || 0) - (a.popularity || 0)).slice(0, 9);\n}\nfunction getCategoryIcon(categoryId) {\n    const icons = {\n        \"payment\": \"\\uD83D\\uDCB3\",\n        \"auth\": \"\\uD83D\\uDD10\",\n        \"storage\": \"☁️\",\n        \"ai\": \"\\uD83E\\uDD16\",\n        \"database\": \"\\uD83D\\uDDC4️\",\n        \"communication\": \"\\uD83D\\uDCE8\",\n        \"social\": \"\\uD83D\\uDC65\",\n        \"maps\": \"\\uD83D\\uDDFA️\",\n        \"analytics\": \"\\uD83D\\uDCCA\",\n        \"ecommerce\": \"\\uD83D\\uDED2\",\n        \"productivity\": \"⚡\",\n        \"media\": \"\\uD83C\\uDFAC\"\n    };\n    return icons[categoryId] || \"\\uD83D\\uDD27\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/api-data.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/lucide-react","vendor-chunks/@swc"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2F%5Bslug%5D%2Fpage&page=%2Fapi%2F%5Bslug%5D%2Fpage&appPaths=%2Fapi%2F%5Bslug%5D%2Fpage&pagePath=private-next-app-dir%2Fapi%2F%5Bslug%5D%2Fpage.tsx&appDir=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5Cvs%20code%20projects%5Cboilerplate%20code%20webapp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=export&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();